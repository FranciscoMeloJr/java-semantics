Testing class initialization sequence
  - the last feature remaining for full support of non-static semantics of classes.

Part 2 - class init

2. field initializers.
3. instance initializers.
4. superclass-to-subclass init order.

201. Fileds with initializer, all initialized with a constant expression.
202. Fields with initializer, some initializer exps refer to fields declared above.
203. Fields with initializer, initializer exps refer to fields declared below. Default values exposed.
204. Fields with initializer, forward reference, default values for all types tested.
205. Field with initializer, initializer have an assignment to other field declared forward.
206. Fields with initializer, refering to methods declared both below and above.
207. Fields with initializer, refering to superclass fields/methods.
208. Fields with initializer, calling an overridden method from subclass. The method
  references fileds in the subclass which have initializers. The test should expose default values
  of the fields in the subclass.
    It is not clear from JLS what version of method should be called. I suppose that polymorphism
  applies in field initializer context.
209. Fields with initializer throwing an exception. Test that all the remaining initializers
  and the constructor are not executed.
210. Using super in the field initializer. Call a super field/method with the same name
  as a member in this class, from a filed initializer.
211. Multifield with init. two groups of three fields each:
  int a, b=..., c;
  int d=..., e, f=...;
  Test their values.

31. Field with initializer, then instance initializer, initializing the same field, then constructor.
32. Instance initializer, then field initializer, initializing the same field, then constructor.
33. Field, initializer, field, initializer, then constructor.
34. Inst initializer throwing exc. The remaining field inits and constructor are not executed.
35. Inst initializer with a local var hiding a field.

41. Three classes, all with fields with initializer and no-arg constructor. Test that the order is correct.
  All initializers print a message.

todo:
  Field of array type special cases:
    - fields with array initializer
    - fields with C-style array declaration


