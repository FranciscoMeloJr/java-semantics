Notes:

1. We don't plan to implement precise representation of floats as mantissa and exponent, we will use the
  representation provided by K.
2. Hexadecimal floats are not supported (irrelevant anyway).

    Part I. Float Literals.

11. Simple double literal, like 1.23, 0.017: print it.
12. Float and double literals with a letter at the end: 1.2f, 1.3F, 1.4d, 1.5D.

    Part II. Float operators.

21. Plus: double + double.
22: All numeric operators: unary +, -, binary *, /, %, +, - . Also ++, --, (prefix/postfix)
23. Comparison operators: <, <=, >, >=, ==, !=.
24. Conditional operator (one case: one op double, another one integer).
25. String concatenation operator: positive, negative, positive sub-zero and negative sub-zero doubles + another String.

    Part III. Explicit cast.
31. Cast among floats: float to double, double to float, float to float.
32. Cast to int: float to int, double to int.
33. Cast to types: double to byte, short, int, long, char, float, double.
34. Cast types to double: byte, short, int, long, char, float, double to float, without precision loss.

    Part IV. Numeric promotions (explicit promotion to float/double).

Test structure: an overloaded method with one argument of all possible numeric types, both integer and floating-point.
  The method prints the received argument.
  We'll call the method with an argument expression of type x+y, where one of x or y
  is float or double.

41. Promotions involving float:
  - byte + float
  - short + float
  - int + float
  - long + float
  - char + float
  - float + float
  - double + float
  - float + int

42. Promotions involving double:
  - byte + double
  - short + double
  - int + double
  - long + double
  - char + double
  - float + double
  - double + double
  - double + int

43. Assignment conversion:
  - int assigned to float
  - int assigned to double

44. Compound assignment:
  - double += int
  - String += double

  Part V. Float subtyping with method overloading.

51. Float is larger than integer types, but smaller than double.
  Method f() overloaded with versions f(float), f(double).
  Call the method with arguments byte, short, int, long ,char, float, double.

52. Double is larger than any other numeric type.
  Method f(double).
  Call the method with arguments byte, short, int, long ,char, float, double.
