class a {
  var x:int ;
  method a() {
    x=7;
  }
  method m0():int {
    return x;
  }
}

class b extends a {
  var x:bool ;
  method b() {
    super.a();
    x=true;
  }
  method m1():int {
    return super.x;
  }
  method m2():int {
    var o:class a = this;
    return o.x;            // implicit casting
    // the field x is the one in the type a of o, that is, 7
  }
  method m3():int {
    return (cast this to a).x;  // explicit casting
    //"cast object to class" casts "object" to "class"
  } 
  method m4():int {
    return aux1(this);
  }
  method aux1(o:class a):int {   // implicit casting, again
    return o.x;
  }
  method m5():bool {
    return aux2(this);
  }
  method aux2(o:class a):bool {       // implicit casting, again
    return (cast o to b).x;     // but then explicit casting back to b
  }
}

class main {
  method main() {
    var o:class b = new b();
    if (o.m5()) then print(o.m0(), o.m1(), o.m2(), o.m3(), o.m4());
    else print("m5 not returning true\n");
  }
}

