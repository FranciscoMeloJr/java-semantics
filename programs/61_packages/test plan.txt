Test suite for packages and import declarations.High level test plan:  1. Fully qualified class names  2. Simple class name references in:    - local package, same compilation unit    - local package, different compilation units    - the unnamed package    - package java.lang  3. Single type import  4. Type import on demand  5. Types resolution and references in various expression cathegories.  6. Class access modes.Tests:11. One simple package a. Two classes inside. Refer both with fully qualified name.12. Two simple packages a and b. One class inside each, with different names. Refer both  through fully-qualified class name.13. Two simple packages a and b. Two classes with the same simple name, one in each package.  Refer both through fully-qualified names.14. Complex packages. Packages a, a.a1, a.a2, a.a1.a11 A different class in each package,  with the same name. Test all of them through fully-qualified class name from main.21. A package a. Two classes A and B in the same compilation unit as main. Test both.22. A package a. Two classes A and B in the same package as Main, but in a different compilation unit.  Test both.23. Packages a, a.bb, a.cc. Each have a class A and Test. From each class Test check the simple name A  and all the fully-qualified class names.24. Main and two classes A and B are in the unnamed package. The same classes are in the package a.  Test all four of them from Main.25. Main and two classes A and B are in the unnamed package. The same classes are in the package a.  Test the classes from package a, by simple name, from another class in a.26. Package java.lang have the classes Object and RuntimeException. Add a package a  with classes Object and RuntimeException. Test both classes unqualified,  qualified with "java.lang", and qualified  with "a" from Main (default package), and from a class Test inside another package B.31. Single type import simple. Class Main, a.A. import a.A from Main. test it by simple name.32. Single type import.  Classes mainp.Main, mainp.Test, a.b.A, a.c.A. Import a.b.A from mainp.Main and a.c.A from otherp.Test.  Test the simple name "A" from the classes Main and Test.33. Multiple single-type imports.  Classes mainp.Main, mainp.Test, a.b.A, a.b.B, a.b.Test, a.c.A, a.c.B. From mainp.Main import a.b.A and  a.c.B. From mainp.Test import a.c.A and a.b.B.  Test the simple name "A" and "B" from the classes mainp.Main, mainp.Test and a.b.Test.34. Single type import in a compilation unit with multiple classes.  Classes mainp.Main, mainp.Test in the same CU, otherp.Test1, otherp.Test2 in the same CU.  Also classes a.A, b.A. Import a.A from CU mainp.Main and b.A from otherp.Test1.  Test simple name A from Main and the three test classes.35. Multiple single-type imports and local classes.  Classes mainp.Main, mainp.B, a.A, a.B, a.C. Import a.A and a.C from Main. Test  simple names A,B,C.41. Type import on demand simple. Class Main, a.A, a.B import a.* from Main. Test simple names A, B.42. Type import on demand.  Classes mainp.Main, mainp.Test, a.b.A, a.b.B, a.c.A, a.c.B Import a.b.* from mainp.Main and a.c.* from  otherp.Test. Test the simple names A and B from the classes Main and Test.43. Multiple type imports on demand.  Classes mainp.Main, mainp.Test, a.a1.A, a.a2.A, b.b1.B, b.b2.B. From mainp.Main import  a.a1.* and b.b2.*. From mainp.Test import a.a2.* and b.b1.*.  Test the simple name "A" and "B" from the classes mainp.Main and mainp.Test.44. Type import on demand in a compilation unit with multiple classes.  Classes mainp.Main, mainp.Test in the same CU, otherp.Test1, otherp.Test2 in the same CU.  Also classes a.A, b.A. Import a.* from CU mainp.Main and b.* from otherp.Test1.  Test simple name A from Main and the three test classes.45. Multiple single-type imports and local classes.  Classes mainp.Main, mainp.B, a.A, b.B, c.C. Import a.* and c.* from Main. Test  simple names A,B,C.46. Single-type imports and type import on demand mix. No name collisions.  Classes a.A, a.B, a.C, b.B, b.C, c.C.  From Main import: a.A, c.*, b.B. Test A,B,C from Main.51. Testing instantiation, static method access, static field read and static field write  through fully-qualified class reference.  Classes Main, pack.A. Class pack.A have a traced constructor, static method f() and static field v.  Test new pack.A(), pack.A.f(), pack.A.a, pack.A.a = x from Main.52. Testing instantiation, static method access and static field access from all possible  package-resolution modes.  class Main. Target classes A, b.B, b.C, c.C, d.A, d.C.  All of them contain a traced constructor, a static method f() and a field v.  class Main imports b.B and c.*. Test constructor, method call and field read through qualifiers:    - A    - B    - C    - d.A,    - d.C61. Class access modes. Packages pack1, pack2. Classes:  - Main  - public pack1.A  - package pack1.B  - package pack2.A  - package pack2.B  Access simple names A and B from Main.test(), pack1.A.test() and pack2.B.test().