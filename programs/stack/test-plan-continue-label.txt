Test plans for continue with label and other related statements,
  which might be affected by changes introduced by continue with label semantics.

Part 1. Simple-Break, updated. Simple break inside labeled statements.
  Test that simple break correctly interacts with labeled statements.
  It should propagate through labeled non-loops, and interact with labeled loops.
07. break -> labeled while.
08. break -> labeled doWhile.
09. break -> labeled for.
10. break -> labeled block -> matched simple while.

Part 2. Label-Propagation.
  Testing that label propagation works correctly and that unlabeled loop will
  not steal the label from it's enclosing statement.
  This tests start with name label-propagation, and all contain a labeled break
  inside an unlabeled loop inside another labeled statement.

1. break label -> simple doWhile -> matched labeled block.
2. break label -> simple doWhile -> matched labeled while.
3. break label -> simple doWhile -> matched labeled for.

Part 3. Continue-Label 1. One labeled loop.

01. continue label -> labeled while.
02. continue label -> labeled do. Continue on second iteration.
03. continue label -> labeled do. Continue on first iteration.
04. continue label -> labeled for.
05. continue label -> try/catch -> labeled for.
  Testing rule ContinueWithLabelPropagation.
06. continue label -> try/finally -> labeled for.
  Testing rule ContinueInsideFinally.

Part 4. Continue-Label 2. Loop or labeled block inside other labeled loop.
  Testing that continue with label propagates correctly through
  other loop-related and label-related constructs.
  In all tests below continue should match the external labeled while statement.

07. continue label -> simple while -> matched labeled while.
08. continue label -> labeled while -> matched labeled while.
09. continue label -> simple for -> matched labeled while.
10. continue label -> labeled for -> matched labeled while.
11. continue label -> labeled block -> matched labeled while.

