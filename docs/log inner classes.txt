1.ok. For now we implemented a comprehensive suite of tests, implementation-agnostic.
2.ok. Configuration. We need at least two cells:
  - <enclosingClass> - knows who is the enclosing class of a given class. Alteady exists.
  We will use this information unchanged for now. We don't have any information saying if the
  enclosing class is instance or static.
  todo: Verify if this can lead to problems. If yes - add relevant tests.
  - <enclosingObj> - the location of the enclosing object, at runtime.

  Most of the preprocessing should happen at elaboration time. We need to implement the following:

3.ok. Support for qualified new constructs.
  obj.new Class() should add the relevant value in the <enclosingObj> cell.
4.ok. Desugar all "this" qualifiers into Class.this
5.ok. Support for resolving instance fields/methods from enclosing instance.
  Each such reference should be desugared into Class.this.name.
6.ok. Instantiation of inner classes without qualifier. Qualifier is properly inferred.
7.ok. Prepare the ground for implementing the call to qualified superclass constructor.
  Here we need some refactoring.
  Right now <enclosingObj> is associated to a whole object. It should be associated with
  each object stack layer. This way base class could have a different enclosing object
  than the derived class.
8. Add support for:
  - QSuperField - A.super.f
  - QSuperMethod - A.super.m()
  - QSuperConstrInv - a.super(...)

