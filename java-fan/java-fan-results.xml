<?xml version='1.0' encoding='UTF-8' ?>
<testsuite name='java-semantics' tests='625' errors='null' failures='219' time='335.378'>

<testcase classname='01_smoke_tests' name='array.java' time='10.781'>
</testcase>

<testcase classname='01_smoke_tests' name='helloWorld.java' time='11.12'>
</testcase>

<testcase classname='01_smoke_tests' name='read.java' time='11.612'>
<failure>
Expected output:

Insert two numbers: You inserted: 12 85
Done!

Actual output:

</failure>
</testcase>

<testcase classname='01_smoke_tests' name='sumArrayInFor.java' time='11.215'>
</testcase>

<testcase classname='01_smoke_tests' name='sumInWhile.java' time='12.213'>
</testcase>

<testcase classname='02_literals' name='literals_011_long_decimal.java' time='9.063'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.ArgumentList(JavaWrapper.java:2264)
	at javarl.JavaWrapper.Arguments(JavaWrapper.java:2251)
	at javarl.JavaWrapper.PrimarySuffix(JavaWrapper.java:2135)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2036)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2687)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Decimal long literals:
0 12 12345678900 12345678900
Long not overflow, 2002001001L + 2002001001L = 20020010012002001001
long extremes: -9223372036854775808 9223372036854775807
Done!

Actual output:

</failure>
</testcase>

<testcase classname='02_literals' name='literals_01_integer_decimal.java' time='12.041'>
<failure>
Expected output:

Decimal int literals:
0 12 -13
Int overflow, 2002001001 + 2002001001 = -290965294
int extremes: -2147483648 2147483647
Done!

Actual output:

Decimal int literals:
0 12 -13
Int overflow, 2002001001 + 2002001001 = 4004002002
int extremes: -2147483648 2147483647
Done!
</failure>
</testcase>

<testcase classname='02_literals' name='literals_02_integer_hexa.java' time='8.73'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "0L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.ArgumentList(JavaWrapper.java:2264)
	at javarl.JavaWrapper.Arguments(JavaWrapper.java:2251)
	at javarl.JavaWrapper.PrimarySuffix(JavaWrapper.java:2135)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2036)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2687)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Hexa int literals:
0 95 95 -16
Hexa int overflow, 0x70000000 + 0x70000000 = 18790481921879048192
int extremes: -2147483648 2147483647
Hexa long literals:
0 1250999896491 1250999896491 4294967280 -4294967296
Hexa long not overflow, 0x70000000L + 0x70000000L = 18790481921879048192
long extremes: -9223372036854775808 9223372036854775807
Done!

Actual output:

</failure>
</testcase>

<testcase classname='02_literals' name='literals_03_integer_octa.java' time='9.901'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "0L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.ArgumentList(JavaWrapper.java:2264)
	at javarl.JavaWrapper.Arguments(JavaWrapper.java:2251)
	at javarl.JavaWrapper.PrimarySuffix(JavaWrapper.java:2135)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2036)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2687)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Octa int literals:
0 63 -1
Octa int overflow, 017777777777 + 017777777777 = 21474836472147483647
int extremes: -2147483648 2147483647
Octa long literals:
0 4294967295 -1
Octa long not overflow, 017777777777L + 017777777777L = 21474836472147483647
long extremes: -9223372036854775808 9223372036854775807
Done!

Actual output:

</failure>
</testcase>

<testcase classname='02_literals' name='literals_04_boolean.java' time='9.824'>
</testcase>

<testcase classname='02_literals' name='literals_05_char.java' time='11.929'>
<failure>
Expected output:

Standart single char literals:
aA067
Single chars, same as in named escapes:
btnfr
Done!

Actual output:

Standart single char literals:
'a''A''0'' ''#'
Single chars, same as in named escapes:
'b''t''n''f''r'
Done!
</failure>
</testcase>

<testcase classname='02_literals' name='literals_06_char_escape.java' time='10.444'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Named escape:
217
Octal escape of simple chars:
277
Unicode escape of simple chars:
277
Octal escape:
305
Octal escape 0, 127, again: 127
Unicode escape:
151
Done!

Actual output:

</failure>
</testcase>

<testcase classname='02_literals' name='literals_07_string.java' time='10.839'>
<failure>
Expected output:

Empty string:

Simple chars string:
aA0 #
Names escape only:
\
two named escapes:
"\
Chars and escapes together:
_\'_<>
Done!

Actual output:

Empty string:

Simple chars string:
aA0 #
Names escape only:
\\
two named escapes:
\"\\
Chars and escapes together:
_\\'_<>
Done!
</failure>
</testcase>

<testcase classname='02_literals' name='literals_08_string_escapes_adv.java' time='12.117'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Named escape:
___	__
______"__'__\_
Octal escape of simple chars:
_a__A__0__ __#_
Unicode escape of simple chars:
_a__A__0__ __#_
Octal escape:
_ ____ ______?__ ____?___
Unicode escape:
_ _________
Done!

Actual output:

</failure>
</testcase>

<testcase classname='02_literals' name='literals_09_null.java' time='11.601'>
<failure>
Expected output:

null
Done!

Actual output:

str("Done!"
</failure>
</testcase>

<testcase classname='03_syntax_samples' name='DotOperator1.java' time='8.653'>
<error>
Test error:
javarl.ParseException: Encountered "(" at line 40, column 14.
Was expecting one of:
    "instanceof" ...
    ";" ...
    "=" ...
    ">" ...
    "<" ...
    "?" ...
    "==" ...
    "<=" ...
    ">=" ...
    "!=" ...
    "||" ...
    "&&" ...
    "++" ...
    "--" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "&" ...
    "|" ...
    "^" ...
    "%" ...
    "<<" ...
    ">>" ...
    ">>>" ...
    "+=" ...
    "-=" ...
    "*=" ...
    "/=" ...
    "&=" ...
    "|=" ...
    "^=" ...
    "%=" ...
    "<<=" ...
    ">>=" ...
    ">>>=" ...
    
	at javarl.JavaWrapper.generateParseException(JavaWrapper.java:6127)
	at javarl.JavaWrapper.jj_consume_token(JavaWrapper.java:6003)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2437)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.ConstructorDeclaration(JavaWrapper.java:1133)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:343)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Done!

Actual output:

</failure>
</testcase>

<testcase classname='03_syntax_samples' name='DotOperator2.java' time='8.661'>
<error>
Test error:
javarl.ParseException: Encountered "(" at line 25, column 12.
Was expecting one of:
    ";" ...
    "=" ...
    "++" ...
    "--" ...
    "+=" ...
    "-=" ...
    "*=" ...
    "/=" ...
    "&=" ...
    "|=" ...
    "^=" ...
    "%=" ...
    "<<=" ...
    ">>=" ...
    ">>>=" ...
    
	at javarl.JavaWrapper.generateParseException(JavaWrapper.java:6127)
	at javarl.JavaWrapper.jj_consume_token(JavaWrapper.java:6003)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2437)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.ConstructorDeclaration(JavaWrapper.java:1133)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:343)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Done!

Actual output:

</failure>
</testcase>

<testcase classname='03_syntax_samples' name='DotOperator3.java' time='7.4'>
<error>
Test error:
javarl.ParseException: Encountered "(" at line 23, column 12.
Was expecting one of:
    ";" ...
    "=" ...
    "++" ...
    "--" ...
    "+=" ...
    "-=" ...
    "*=" ...
    "/=" ...
    "&=" ...
    "|=" ...
    "^=" ...
    "%=" ...
    "<<=" ...
    ">>=" ...
    ">>>=" ...
    
	at javarl.JavaWrapper.generateParseException(JavaWrapper.java:6127)
	at javarl.JavaWrapper.jj_consume_token(JavaWrapper.java:6003)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2437)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.ConstructorDeclaration(JavaWrapper.java:1133)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:343)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Done!

Actual output:

</failure>
</testcase>

<testcase classname='03_syntax_samples' name='Operators_JBook.java' time='10.151'>
</testcase>

<testcase classname='03_syntax_samples' name='Operators_non_JBook.java' time='11.296'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Done!

Actual output:

</failure>
</testcase>

<testcase classname='04_prim_operators' name='op_011_int_to_int_prefix.java' time='11.397'>
</testcase>

<testcase classname='04_prim_operators' name='op_012_int_to_int_pre_inc_dec.java' time='10.617'>
</testcase>

<testcase classname='04_prim_operators' name='op_013_int_to_int_postfix.java' time='10.35'>
</testcase>

<testcase classname='04_prim_operators' name='op_014_int_to_int_bin_arith.java' time='10.355'>
</testcase>

<testcase classname='04_prim_operators' name='op_015_int_to_int_bitwise.java' time='10.605'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

9 | 3  = 11
9 ^ 3  = 10
9 & 3  = 1
9 | -4  = -3
9 ^ -4  = -11
9 & -4  = 8
-10 | 3  = -9
-10 ^ 3  = -11
-10 & 3  = 2
~ 9  = -10
Done!

Actual output:

</failure>
</testcase>

<testcase classname='04_prim_operators' name='op_016_int_to_int_cond.java' time='10.817'>
</testcase>

<testcase classname='04_prim_operators' name='op_02_int_to_bool.java' time='9.957'>
</testcase>

<testcase classname='04_prim_operators' name='op_03_int_bit_shift.java' time='10.655'>
<failure>
Expected output:

 9 << 2  = 36
 9 << -2  = 1073741824
-9 << 2  = -36
-9 << -2  = -1073741824
 9 >> 2  = 2
 9 >> -2  = 0
-9 >> 2  = -3
-9 >> -2  = -1
 9 >>> 2  = 2
 9 >>> -2  = 0
-9 >>> 2  = 1073741821
-9 >>> -2  = 3
Done!

Actual output:

</failure>
</testcase>

<testcase classname='04_prim_operators' name='op_041_int_assign_plus.java' time='9.763'>
</testcase>

<testcase classname='04_prim_operators' name='op_042_int_assign_all.java' time='11.475'>
<failure>
Expected output:

9 = 3  => 3
9 += 3 => 12
9 -= 3 => 6
9 *= 3 => 27
9 /= 3 => 3
9 &= 3 => 1
9 |= 3 => 11
9 ^= 3 => 10
9 %= 3 => 0
9 <<= 3 => 72
9 >>= 3 => 1
9 >>>= 3 => 1
Done!

Actual output:

</failure>
</testcase>

<testcase classname='04_prim_operators' name='op_05_int_to_int_overflow.java' time='10.023'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

 2147483647 + 2147483647  = -2
-2147483647 - 2147483647  = 2
 2147483647 * 2147483647  = 1
- (-2147483648)  = -2147483648
++2147483647  = -2147483648
2147483647++  = -2147483648
-- (-2147483648)  = 2147483647
(-2147483648)--  = 2147483647
~(-2147483648)  = 2147483647
2147483647 | (-2147483648)  = -1
2147483647 ^ (-2147483648)  = -1
3 << 31  = -2147483648
Done!

Actual output:

</failure>
</testcase>

<testcase classname='04_prim_operators' name='op_06_long_to_long.java' time='8.051'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "9L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2726)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2408)
	at javarl.JavaWrapper.ForStatement(JavaWrapper.java:3008)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2453)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.ConstructorDeclaration(JavaWrapper.java:1133)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:343)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

9L | 3L  = 11
9L ^ 3L  = 10
9L & 3L  = 1
9L | -4L  = -3
9L ^ -4L  = -11
9L & -4L  = 8
-10L | 3L  = -9
-10L ^ 3L  = -11
-10L & 3L  = 2
9L << 3L  = 72
9L >> 3L  = 1
9L >>> 3L  = 1
9L + 3L  = 12
9L - 3L  = 6
9L * 3L  = 27
9L / 3L  = 3
9L % 3L  = 0
++9L  = 10
--9L  = 8
~ 9L  = -10
+ 9L  = 9
- 9L  = -9
9L++  = 9
9L--  = 9
9L > 3L ? 9L : 3L = 9
Done!

Actual output:

</failure>
</testcase>

<testcase classname='04_prim_operators' name='op_07_long_to_bool.java' time='7.308'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "9L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2726)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.ConstructorDeclaration(JavaWrapper.java:1133)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:343)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

9L == 3L  = false
9L != 3L  = true
9L < 3L  = false
9L > 3L  = true
9L <= 3L  = false
9L >= 3L  = true
Done!

Actual output:

</failure>
</testcase>

<testcase classname='04_prim_operators' name='op_08_long_bit_shift.java' time='6.967'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "9L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2726)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.ConstructorDeclaration(JavaWrapper.java:1133)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:343)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

 9L << 2L  = 36
 9L << -2L  = 4611686018427387904
-9L << 2L  = -36
-9L << -2L  = -4611686018427387904
 9L >> 2L  = 2
 9L >> -2L  = 0
-9L >> 2L  = -3
-9L >> -2L  = -1
 9L >>> 2L  = 2
 9L >>> -2L  = 0
-9L >>> 2L  = 4611686018427387901
-9L >>> -2L  = 3
Done!

Actual output:

</failure>
</testcase>

<testcase classname='04_prim_operators' name='op_09_long_assign.java' time='7.954'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "9L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2726)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2408)
	at javarl.JavaWrapper.ForStatement(JavaWrapper.java:3008)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2453)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.ConstructorDeclaration(JavaWrapper.java:1133)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:343)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

9L = 3L => 3
9L += 3L => 12
9L -= 3L => 6
9L *= 3L => 27
9L /= 3L => 3
9L &= 3L => 1
9L |= 3L => 11
9L ^= 3L => 10
9L %= 3L => 0
9L <<= 3L => 72
9L >>= 3L => 1
9L >>>= 3L => 1
Done!

Actual output:

</failure>
</testcase>

<testcase classname='04_prim_operators' name='op_10_long_to_long_overflow.java' time='8.072'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "9223372036854775807L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2726)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.ConstructorDeclaration(JavaWrapper.java:1133)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:343)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:329)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

 9223372036854775807L + 9223372036854775807L  = -2
-9223372036854775807L - 9223372036854775807L  = 2
 9223372036854775807L * 9223372036854775807L  = 1
- (-9223372036854775808L)  = -9223372036854775808
++9223372036854775807L  = -9223372036854775808
9223372036854775807L++  = -9223372036854775808
-- (-9223372036854775808L)  = 9223372036854775807
(-9223372036854775808L)--  = 9223372036854775807
~(-9223372036854775808L)  = 9223372036854775807
9223372036854775807L | (-9223372036854775808L)  = -1
9223372036854775807L ^ (-9223372036854775808L)  = -1
3L << 63L  = -9223372036854775808
Done!

Actual output:

</failure>
</testcase>

<testcase classname='04_prim_operators' name='op_111_bool_to_bool_not_lazy.java' time='10.348'>
<failure>
Expected output:

true | false  = true
true ^ false  = true
true & false  = false
true == false = false
true != false = true
! true  = false
Done!

Actual output:

</failure>
</testcase>

<testcase classname='04_prim_operators' name='op_112_lazy_and.java' time='8.655'>
</testcase>

<testcase classname='04_prim_operators' name='op_113_lazy_or.java' time='9.117'>
</testcase>

<testcase classname='04_prim_operators' name='op_12_bool_compound_assign.java' time='9.919'>
<failure>
Expected output:

false true true
Done!

Actual output:

</failure>
</testcase>

<testcase classname='04_prim_operators' name='op_13_compound_assign_jls.java' time='10.63'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
</testcase>

<testcase classname='05_prim_conversions' name='exp_conv_01_primitive_cast.java' time='7.254'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "9000000000L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.CastExpression(JavaWrapper.java:2004)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1867)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.CastExpression(JavaWrapper.java:2004)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1867)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1721)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.ArgumentList(JavaWrapper.java:2264)
	at javarl.JavaWrapper.Arguments(JavaWrapper.java:2251)
	at javarl.JavaWrapper.PrimarySuffix(JavaWrapper.java:2135)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2036)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2687)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

100 -24 64 0 80
100 1000 16960 6656 -15536
100 1000 1000000 410065408 50000
100 1000 1000000 9000000000 50000
100 1000 16960 6656 50000
Done!

Actual output:

</failure>
</testcase>

<testcase classname='05_prim_conversions' name='exp_conv_02_primitive_var_init_cast.java' time='9.019'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "9000000000L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.CastExpression(JavaWrapper.java:2004)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1867)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.VariableInitializer(JavaWrapper.java:780)
	at javarl.JavaWrapper.VariableDeclarator(JavaWrapper.java:714)
	at javarl.JavaWrapper.LocalVariableDeclaration(JavaWrapper.java:2632)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2559)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

100 1000 1000000 9000000000 50000
Done!

Actual output:

</failure>
</testcase>

<testcase classname='05_prim_conversions' name='imp_conv_01_assing_widening.java' time='8.152'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "9876543210L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.CastExpression(JavaWrapper.java:2004)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1867)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2726)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:329)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

100 100 100 100
-1100 -1100 -1100
1100200 1100200
9876543210
122 122 z
Done!

Actual output:

</failure>
</testcase>

<testcase classname='05_prim_conversions' name='imp_conv_02_assing_narrowing.java' time='8.72'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "9876543210L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2726)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

100 -1100 1100200 9876543210 d
Done!

Actual output:

</failure>
</testcase>

<testcase classname='05_prim_conversions' name='imp_conv_03_primitive_var_init.java' time='7.868'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "9000000000L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.VariableInitializer(JavaWrapper.java:780)
	at javarl.JavaWrapper.VariableDeclarator(JavaWrapper.java:714)
	at javarl.JavaWrapper.LocalVariableDeclaration(JavaWrapper.java:2632)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2559)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:329)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

100 1000 1000000 9000000000 50000 z d
Done!

Actual output:

</failure>
</testcase>

<testcase classname='05_prim_conversions' name='imp_conv_04_mcall_widening.java' time='7.351'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "9876543210L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.CastExpression(JavaWrapper.java:2004)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1867)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2726)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.ConstructorDeclaration(JavaWrapper.java:1133)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:343)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

100 100 100 100
-1100 -1100 -1100
1100200 1100200
9876543210
122 122 122
Done!

Actual output:

</failure>
</testcase>

<testcase classname='05_prim_conversions' name='imp_conv_05_unary_num_prom.java' time='7.396'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "10000L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2066)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1721)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.ArgumentList(JavaWrapper.java:2264)
	at javarl.JavaWrapper.Arguments(JavaWrapper.java:2251)
	at javarl.JavaWrapper.PrimarySuffix(JavaWrapper.java:2135)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2036)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2687)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

1000 32768 -32768
2500 40000 1073739324
2500 167772160000 4611686018427385404
2500 285212672 1073739324
Done!

Actual output:

</failure>
</testcase>

<testcase classname='05_prim_conversions' name='imp_conv_06_unary_prom_array.java' time='10.534'>
</testcase>

<testcase classname='05_prim_conversions' name='imp_conv_07_bin_prom_to_int_all_op.java' time='11.528'>
<failure>
Expected output:

1000000
1000
0
60000
0
false
true
false
true
true
false
-32768
16384
1000
Done!

Actual output:

1000
0
60000
0
false
true
false
true
true
false))) in(noVal) t(id(0) k(({short}(- i( 32768)) & {short}(- i(16384))) -> call(o(curr(System) orig(System
</failure>
</testcase>

<testcase classname='05_prim_conversions' name='imp_conv_08_bin_prom_selections.java' time='8.325'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "123456789L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1759)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.ArgumentList(JavaWrapper.java:2264)
	at javarl.JavaWrapper.Arguments(JavaWrapper.java:2251)
	at javarl.JavaWrapper.PrimarySuffix(JavaWrapper.java:2135)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2036)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2687)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

16129
1000000
-1794967296
127000
127000
1234567000
1234567000
123456789000
123456789000
123456789000
123456789000
Done!

Actual output:

</failure>
</testcase>

<testcase classname='05_prim_conversions' name='imp_conv_09_bin_prom_cond_op.java' time='9.852'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "9876543210L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.VariableInitializer(JavaWrapper.java:780)
	at javarl.JavaWrapper.VariableDeclarator(JavaWrapper.java:714)
	at javarl.JavaWrapper.LocalVariableDeclaration(JavaWrapper.java:2632)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2559)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

100 1000 1000000 9876543210 v
1000 1000000 9876543210 1000 100
100 1000 1000000 9876543210 v 101
Done!

Actual output:

</failure>
</testcase>

<testcase classname='05_prim_conversions' name='imp_conv_10_short_inc_dec.java' time='12.429'>
<failure>
Expected output:

1 -1 1 -1 -1 1
-32768 32767 -32768 32767 127 65535
Done!

Actual output:

1 -1 1 -1 -1 1
32768 -32769 32768 -32769 -129 -1
Done!
</failure>
</testcase>

<testcase classname='05_prim_conversions' name='imp_conv_11_compound_assign.java' time='10.048'>
<failure>
Expected output:

-2
15807
-200
8191
-32768
-1
32766
0
-4
8191
8191
Done!

Actual output:

-967233
6553400
8191))) in(noVal) t(id(0) k(('s &= i(32768)) -> call(o(curr(System) orig( System
</failure>
</testcase>

<testcase classname='05_prim_conversions' name='imp_conv_12_compound_assign_sel.java' time='10.542'>
<failure>
Expected output:

-29
-25536
-294967296
4000000000
34464
Done!

Actual output:

227
40000
4000000000
4000000000
100000
Done!
</failure>
</testcase>

<testcase classname='06_string_plus' name='str_conv_011_String_plus_str.java' time='10.429'>
</testcase>

<testcase classname='06_string_plus' name='str_conv_012_String_plus_int.java' time='10.7'>
<failure>
Expected output:

ab-12
-12cde
Done!

Actual output:

</failure>
</testcase>

<testcase classname='06_string_plus' name='str_conv_013_String_plus_bool.java' time='8.961'>
<failure>
Expected output:

true
Done!

Actual output:

</failure>
</testcase>

<testcase classname='06_string_plus' name='str_conv_014_String_plus_obj.java' time='8.529'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

java.lang.RuntimeException: re
java.lang.AssertionError: ae
Ex: ex
Done!

Actual output:

</failure>
</testcase>

<testcase classname='06_string_plus' name='str_conv_015_String_plus_int_types.java' time='7.452'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "9000000000L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.CastExpression(JavaWrapper.java:2004)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1867)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1721)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2066)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.ArgumentList(JavaWrapper.java:2264)
	at javarl.JavaWrapper.Arguments(JavaWrapper.java:2251)
	at javarl.JavaWrapper.PrimarySuffix(JavaWrapper.java:2135)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2036)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2687)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

100_1000_1000000_9000000000_z
Done!

Actual output:

</failure>
</testcase>

<testcase classname='06_string_plus' name='str_conv_016_String_plus_null.java' time='10.2'>
<failure>
Expected output:

null
Done!

Actual output:

</failure>
</testcase>

<testcase classname='06_string_plus' name='str_conv_02_String_assign_plus.java' time='10.574'>
<failure>
Expected output:

abcde
abcde12
abcde12cde
Done!

Actual output:

</failure>
</testcase>

<testcase classname='06_string_plus' name='str_conv_03_Object_assign_plus.java' time='10.441'>
<failure>
Expected output:

java.lang.RuntimeException: re-zz
java.lang.RuntimeException: re-cde
Done!

Actual output:

</failure>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_01_assign_to_object.java' time='9.423'>
<failure>
Expected output:

java.lang.Object
ab
true
UserClass
Done!

Actual output:

</failure>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_02_assign_from_null.java' time='9.206'>
<failure>
Expected output:

nullnull
nullnull
nullnull
nullnull
Done!

Actual output:

nullo),p(nullo),pl(nullo),p(nullo),pl(nullo),p( nullo),pl(nullo),pl(str("Done!"</failure>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_03_assign_f_null_t_obj.java' time='9.201'>
<failure>
Expected output:

null
null
null
null
Done!

Actual output:

nullo),pl(nullo),pl(nullo),pl(str("Done!"
</failure>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_04_eq_true_same_type.java' time='10.181'>
<failure>
Expected output:

true
true
true
true
Done!

Actual output:

</failure>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_05_eq_true_diff_type.java' time='10.55'>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_06_eq_false_same_type.java' time='9.375'>
<failure>
Expected output:

false
false
false
false
false
Done!

Actual output:

</failure>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_07_eq_false_diff_type.java' time='10.78'>
<failure>
Expected output:

false
false
false
false
false
Done!

Actual output:

</failure>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_08_neq_false.java' time='9.721'>
<failure>
Expected output:

false
false
false
false
false
false
Done!

Actual output:

</failure>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_09_neq_true.java' time='10.497'>
<failure>
Expected output:

true
true
true
true
true
true
Done!

Actual output:

</failure>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_10_cast_from_obj.java' time='10.26'>
<failure>
Expected output:

java.lang.Object
abc
12
user clazz
Done!

Actual output:

</failure>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_11_cast_from_obj_null.java' time='10.269'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

true
true
true
true
Done!

Actual output:

</failure>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_12_cast_base_derived_1.java' time='10.086'>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_13_cast_base_derived_2.java' time='10.662'>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_14_instanceof_true_types.java' time='10.811'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

true
true
true
true
Done!

Actual output:

</failure>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_151_instanceof_String.java' time='9.823'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

true
true
false
false
Done!

Actual output:

</failure>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_15_instanceof_false_types.java' time='9.192'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

false
false
false
false
false
false
Done!

Actual output:

</failure>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_16_instanceof_null_types.java' time='10.712'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

false
false
false
false
false
Done!

Actual output:

</failure>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_17_instanceof_true.java' time='9.899'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

true
true
Done!

Actual output:

</failure>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_18_instanceof_false.java' time='10.371'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

false
false
false
Done!

Actual output:

</failure>
</testcase>

<testcase classname='07_ref_operators' name='ref_op_19_conditional_simple.java' time='10.064'>
</testcase>

<testcase classname='08_op_cond_type' name='op_cond_type_01_eq.java' time='10.96'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

bool bool : boolean
int int : int
A A : A
I I : I
int[] int[]: int[]
Done!

Actual output:

</failure>
</testcase>

<testcase classname='08_op_cond_type' name='op_cond_type_02_numeric.java' time='11.257'>
<failure>
Expected output:

byte byte : byte
byte short : short
byte int : int
byte long : long
byte char : int

short byte : short
short short : short
short int : int
short long : long
short char : int

int byte : int
int short : int
int int : int
int long : long
int char : int

long byte : long
long short : long
long int : long
long long : long
long char : long

char byte : int
char short : int
char int : int
char long : long
char char : char

Done!

Actual output:

byte byte : int
byte short : int
byte int : int
byte long : int
byte char : int

short byte : int
short short : int
short int : int
short long : int
short char : int

int byte : int
int short : int
int int : int
int long : int
int char : int

long byte : int
long short : int
long int : int
long long : int
long char : int

char byte : int
char short : int
char int : int
char long : int
char char : int

Done!
</failure>
</testcase>

<testcase classname='08_op_cond_type' name='op_cond_type_03_null_ref.java' time='10.74'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A null : A
null A : A
null I : I
null int[]: int[]
Done!

Actual output:

</failure>
</testcase>

<testcase classname='08_op_cond_type' name='op_cond_type_04_null_null.java' time='10.928'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

null null : A
Done!

Actual output:

</failure>
</testcase>

<testcase classname='08_op_cond_type' name='op_cond_type_05_ref_ref.java' time='10.261'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A I1 : I1
I1 A : I1
I2 I1 : I1
I2[] I1[] : I1[]
A Object : Object
I3 I1 : I1
I1 I3 : I1
B Object : Object
Object B : Object
B[] Object[] : Object[]
Done!

Actual output:

</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_01_null.java' time='8.593'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

f(true ? a : null): createA()
f(A) :A
f(false ? a : null): f(A) :null
Done!

Actual output:

</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_02_new_class.java' time='9.95'>
<failure>
Expected output:

f(true ? new B() : new A()): A()
B()
f(A): B
f(false ? new B() : new A()): A()
f(A): A
Done!

Actual output:

A()
B()"))) in(noVal) t(id(0) k((str("f(A): "),o(f([t(t('
</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_03_new_array.java' time='11.194'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

f(true ? new B[get(1)] : new A[get(2)]): get(1)
f(A[]): 1
f(false ? new B[get(1)] : new A[get(2)]): get(2)
f(A[]): 2
Done!

Actual output:

</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_04_field_access.java' time='11.027'>
<failure>
Expected output:

f(true ? C.x : C.y): C(1)
f(long): 10
f(false ? C.x : C.y): C(4)
f(long): 400
Done!

Actual output:

C(1)"))) in(noVal) t(id(0) k((str("f(int): "),int(10)) -> + -> return -> e(['b,l(5)]) -> return; -> noop) obj(o(f(onil) curr(t( 'exp_type_04_field_access)) curr(t('exp_type_04_field_access)) orig(t( 'exp_type_04_field_access)) orig(t('exp_type_04_field_access)))) fstack( fsi(call(o(curr(System) orig(Syste
</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_05_method_inv.java' time='10.597'>
<failure>
Expected output:

f(true ? fB() : fA()): fB()
f(A): B
f(false ? fB() : fA()): fA()
f(A): A
Done!

Actual output:

fB()"))) in( noVal) t(id(0) k((str("f(A): "),o(f([t(t('
</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_06_array_access.java' time='10.988'>
<failure>
Expected output:

f(true ? vb[get(0)] : va[get(1)]): get(0)
f(A): B
f(false ? vb[get(0)] : va[get(1)]): get(1)
f(A): A
Done!

Actual output:

get(0)"))) in(noVal) t(id(0) k((str("f(A): "),o(f([t( t('
</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_07_postfix_inc_dec.java' time='10.888'>
<failure>
Expected output:

f(true ? b++ : a++): f(long): 1
(b a) = (2 10)
f(false ? b++ : a++): f(long): 10
(b a) = (2 11)
f(true ? b-- : a--): f(long): 2
(b a) = (1 11)
f(false ? b-- : a--): f(long): 11
(b a) = (1 10)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_08_prefix_inc_dec.java' time='10.818'>
<failure>
Expected output:

f(true ? ++b : ++a): f(long): 2
(b a) = (2 10)
f(false ? ++b : ++a): f(long): 11
(b a) = (2 11)
f(true ? --b : --a): f(long): 1
(b a) = (1 11)
f(false ? --b : --a): f(long): 10
(b a) = (1 10)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_09_unary_plus_min.java' time='10.829'>
<failure>
Expected output:

f(true ? +get(1) : +getL(10)): get(1)
f(long): 1
f(false ? +get(1) : +getL(10)): getL(10)
f(long): 10
f(true ? -get(1) : -getL(10)): get(1)
f(long): -1
f(false ? -get(1) : -getL(10)): getL(10)
f(long): -10
Done!

Actual output:

get(1)"))) in(noVal) t(id(0) k((str("f(int): "),int( 1)) -> + -> return -> e(['b,l(2)]) -> return; -> noop) obj(o(f(onil) curr( t('exp_type_09_unary_plus_min)) curr(t('exp_type_09_unary_plus_min)) orig( t('exp_type_09_unary_plus_min)) orig(t('exp_type_09_unary_plus_min)))) fstack(fsi(call(o(curr(System) orig(Syste
</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_10_bit_neg.java' time='11.56'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

f(true ? ~get(1) : ~getL(10)): get(1)
f(long): -2
f(false ? ~get(1) : ~getL(10)): getL(10)
f(long): -11
Done!

Actual output:

</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_11_bool_not.java' time='9.727'>
<failure>
Expected output:

f(true ? !get(false) : !get(true)): get(false)
f(boolean): true
f(false ? !get(false) : !get(true)): get(true)
f(boolean): false
Done!

Actual output:

get(false)"))) in(noVal) t(id(0) k((str( "f(boolean): "),bool(true)) -> + -> return -> e(['b,l(2)]) -> return; -> noop) obj(o(f(onil) curr(t('exp_type_11_bool_not)) curr(t( 'exp_type_11_bool_not)) orig(t('exp_type_11_bool_not)) orig(t( 'exp_type_11_bool_not)))) fstack(fsi(call(o(curr(System) orig(Syste
</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_12_cast_prim.java' time='11.548'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

f(true ? (byte)getL(1) : (int)getL(4)): getL(1)
f(int): 1
f(false ? (byte)getL(1) : (int)getL(4)): getL(4)
f(int): 4
Done!

Actual output:

</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_13_cast_ref.java' time='11.396'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

f(true ? (B) get(o1) : (A) get(o2)): get(B)
f(A): B
f(false ? (B) get(o1) : (A) get(o2)): get(A)
f(A): A
Done!

Actual output:

</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_14_int_multi.java' time='11.803'>
<failure>
Expected output:

f(true ? get(10) * 10 : getL(100) * 10): get(10)
f(long): 100
f(false ? get(10) * 10 : getL(100) * 10): getL(100)
f(long): 1000
f(true ? get(10) / 10 : getL(100) / 10): get(10)
f(long): 1
f(false ? get(10) / 10 : getL(100) / 10): getL(100)
f(long): 10
f(true ? get(10) % 10 : getL(100) % 10): get(10)
f(long): 0
f(false ? get(10) % 10 : getL(100) % 10): getL(100)
f(long): 0
Done!

Actual output:

get(10)"))) in(noVal) t(id(0) k((str("f(int): "), int(100)) -> + -> return -> e(['b,l(2)]) -> return; -> noop) obj(o(f(onil) curr(t('exp_type_14_int_multi)) curr(t('exp_type_14_int_multi)) orig(t( 'exp_type_14_int_multi)) orig(t('exp_type_14_int_multi)))) fstack(fsi(call( o(curr(System) orig(Syste
</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_15_int_add.java' time='9.531'>
<failure>
Expected output:

f(true ? get(10) + 10 : getL(100) + 10): get(10)
f(long): 20
f(false ? get(10) + 10 : getL(100) + 10): getL(100)
f(long): 110
f(true ? get(10) - 10 : getL(100) - 10): get(10)
f(long): 0
f(false ? get(10) - 10 : getL(100) - 10): getL(100)
f(long): 90
Done!

Actual output:

get(10)"))) in(noVal) t(id(0) k((str("f(int): "), int(20)) -> + -> return -> e(['b,l(2)]) -> return; -> noop) obj(o(f(onil) curr(t('exp_type_15_int_add)) curr(t('exp_type_15_int_add)) orig(t( 'exp_type_15_int_add)) orig(t('exp_type_15_int_add)))) fstack(fsi(call(o( curr(System) orig(Syste
</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_16_string_plus.java' time='11.22'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

get(A)
f(true ? get(o2) : "abc " + get(o2)): f(Object): A
get(A)
f(false ? get(o2) : "abc " + get(o2)): f(Object): abc A
Done!

Actual output:

</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_17_int_bit_shift.java' time='10.932'>
<failure>
Expected output:

f(true ? get(10) << 1 : getL(100) << 1): get(10)
f(long): 20
f(false ? get(10) << 1 : getL(100) << 1): getL(100)
f(long): 200
f(true ? get(10) >> 1 : getL(100) >> 1): get(10)
f(long): 5
f(false ? get(10) >> 1 : getL(100) >> 1): getL(100)
f(long): 50
f(true ? get(10) >>> 1 : getL(100) >>> 1): get(10)
f(long): 5
f(false ? get(10) >>> 1 : getL(100) >>> 1): getL(100)
f(long): 50
Done!

Actual output:

</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_18_int_relational.java' time='10.967'>
<failure>
Expected output:

f(true ? get(10) < 10 : getL(100) < 10): get(10)
f(boolean): false
f(false ? get(10) < 10 : getL(100) < 10): getL(100)
f(boolean): false
f(true ? get(10) > 10 : getL(100) > 10): get(10)
f(boolean): false
f(false ? get(10) > 10 : getL(100) > 10): getL(100)
f(boolean): true
f(true ? get(10) <= 10 : getL(100) <= 10): get(10)
f(boolean): true
f(false ? get(10) <= 10 : getL(100) <= 10): getL(100)
f(boolean): false
f(true ? get(10) >= 10 : getL(100) >= 10): get(10)
f(boolean): true
f(false ? get(10) >= 10 : getL(100) >= 10): getL(100)
f(boolean): true
Done!

Actual output:

get(10)"))) in(noVal) t(id(0) k((str( "f(boolean): "),bool(false)) -> + -> return -> e(['b,l(4)]) -> return; -> noop) obj(o(f(onil) curr(t('exp_type_18_int_relational)) curr(t( 'exp_type_18_int_relational)) orig(t('exp_type_18_int_relational)) orig(t( 'exp_type_18_int_relational)))) fstack(fsi(call(o(curr(System) orig( Syste
</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_19_instanceof.java' time='9.738'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

f(true ? get(o) instanceof A : get(o) instanceof B): get(A)
f(boolean): true
f(false ? get(o) instanceof A : get(o) instanceof B): get(A)
f(boolean): false
Done!

Actual output:

</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_20_int_eq.java' time='10.745'>
<failure>
Expected output:

f(true ? get(1) == 1 : getL(10) == 1): get(1)
f(boolean): true
f(false ? get(1) == 1 : getL(10) == 1): getL(10)
f(boolean): false
f(true ? get(1) != 1 : getL(10) != 1): get(1)
f(boolean): false
f(false ? get(1) != 1 : getL(10) != 1): getL(10)
f(boolean): true
Done!

Actual output:

get(1)"))) in(noVal) t(id(0) k((str("f(boolean): "), bool(true)) -> + -> return -> e(['b,l(4)]) -> return; -> noop) obj(o(f( onil) curr(t('exp_type_20_int_eq)) curr(t('exp_type_20_int_eq)) orig(t( 'exp_type_20_int_eq)) orig(t('exp_type_20_int_eq)))) fstack(fsi(call(o( curr(System) orig(Syste
</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_21_bool_eq.java' time='8.552'>
<failure>
Expected output:

f(true ? get(true) == true : get(false) == true): get(true)
f(boolean): true
f(false ? get(true) == true : get(false) == true): get(false)
f(boolean): false
f(true ? get(true) != true : get(false) != true): get(true)
f(boolean): false
f(false ? get(true) != true : get(false) != true): get(false)
f(boolean): true
Done!

Actual output:

get(true)"))) in(noVal) t(id(0) k((str("f(boolean): "),bool( true)) -> + -> return -> e(['b,l(4)]) -> return; -> noop) obj(o(f(onil) curr(t('exp_type_21_bool_eq)) curr(t('exp_type_21_bool_eq)) orig(t( 'exp_type_21_bool_eq)) orig(t('exp_type_21_bool_eq)))) fstack(fsi(call(o( curr(System) orig(Syste
</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_22_ref_eq.java' time='11.239'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

f(true ? get(b) == b : get(a) == b): get(B)
f(boolean): true
f(false ? get(b) == b : get(a) == b): get(A)
f(boolean): false
f(true ? get(b) != b : get(a) != b): get(B)
f(boolean): false
f(false ? get(b) != b : get(a) != b): get(A)
f(boolean): true
Done!

Actual output:

</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_23_bitwise_ops.java' time='8.348'>
<failure>
Expected output:

f(true ? get(1) & 1 : getL(10) & 1): get(1)
f(long): 1
f(false ? get(1) & 1 : getL(10) & 1): getL(10)
f(long): 0
f(true ? get(1) ^ 1 : getL(10) ^ 1): get(1)
f(long): 0
f(false ? get(1) ^ 1 : getL(10) ^ 1): getL(10)
f(long): 11
f(true ? get(1) ^ 1 : getL(10) ^ 1): get(1)
f(long): 1
f(false ? get(1) ^ 1 : getL(10) ^ 1): getL(10)
f(long): 11
Done!

Actual output:

</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_24_logical_ops.java' time='10.722'>
<failure>
Expected output:

f(true ? get(true) & true : get(false) & true): get(true)
f(boolean): true
f(false ? get(true) & true : get(false) & true): get(false)
f(boolean): false
f(true ? get(true) ^ true : get(false) ^ true): get(true)
f(boolean): false
f(false ? get(true) ^ true : get(false) ^ true): get(false)
f(boolean): true
f(true ? get(true) | true : get(false) | true): get(true)
f(boolean): true
f(false ? get(true) | true : get(false) | true): get(false)
f(boolean): true
Done!

Actual output:

</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_25_logical_cond_ops.java' time='9.846'>
<failure>
Expected output:

f(true ? fFalse() && fTrue() : fTrue() && fTrue()): fFalse()
f(boolean): false
f(false ? fFalse() && fTrue() : fTrue() && fTrue()): fTrue()
fTrue()
f(boolean): true
f(true ? fFalse() || fFalse() : fTrue() || fFalse()): fFalse()
fFalse()
f(boolean): false
f(false ? fFalse() || fFalse() : fTrue() || fFalse()): fTrue()
f(boolean): true
Done!

Actual output:

fFalse()"))) in(noVal) t(id(0) k((str("f(boolean): "),bool(false)) -> + -> return -> e(['b,l(4)]) -> return; -> noop) obj(o(f(onil) curr(t( 'exp_type_25_logical_cond_ops)) curr(t('exp_type_25_logical_cond_ops)) orig(t('exp_type_25_logical_cond_ops)) orig(t( 'exp_type_25_logical_cond_ops)))) fstack(fsi(call(o(curr(System) orig( Syste
</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_26_cond_op.java' time='10.404'>
<failure>
Expected output:

f(true ? fTrue() ? a : a : fFalse() ? b : b): fTrue()
f(A): A
f(false ? fTrue() ? a : a : fFalse() ? b : b): fFalse()
f(A): B
Done!

Actual output:

fTrue()"))) in( noVal) t(id(0) k((str("f(A): "),o(f([t(t('
</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_27_assign.java' time='10.568'>
<failure>
Expected output:

f(true ? (b = 2) : (a = 20)): f(long): 2
(b a) = (2 10)
f(false ? (b = 2) : (a = 20)): f(long): 20
(b a) = (2 20)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_28_assign_comp.java' time='10.361'>
<failure>
Expected output:

f(true ? (b += 200) : (a += 200)): f(long): 201
(b a) = (201 10)
f(false ? (b += 200) : (a += 200)): f(long): 210
(b a) = (201 210)
f(true ? (b -= 2) : (a -= 2)): f(long): 199
(b a) = (199 210)
f(false ? (b -= 2) : (a -= 2)): f(long): 208
(b a) = (199 208)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='09_exp_type' name='exp_type_29_composite_exp.java' time='7.552'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "100L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1721)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2066)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1721)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1446)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.ArgumentList(JavaWrapper.java:2264)
	at javarl.JavaWrapper.Arguments(JavaWrapper.java:2251)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2082)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.ArgumentList(JavaWrapper.java:2264)
	at javarl.JavaWrapper.Arguments(JavaWrapper.java:2251)
	at javarl.JavaWrapper.PrimarySuffix(JavaWrapper.java:2135)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2036)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2687)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

f(true ? get(1) + (10 + 100) : get(2) + (10 + 100L)): get(1)
f(long): 111
f(false ? get(1) + (10 + 100) : get(2) + (10 + 100L)): get(2)
f(long): 112
Done!

Actual output:

</failure>
</testcase>

<testcase classname='11_stmt_basic' name='assert_statement.java' time='10.131'>
<failure>
Expected output:

1 > 0 asserted
1 > 0 asserted with arg
java.lang.AssertionError
java.lang.AssertionError: null
java.lang.AssertionError: abc
java.lang.AssertionError: -1
Done!

Actual output:

</failure>
</testcase>

<testcase classname='11_stmt_basic' name='emptyStatement.java' time='9.35'>
</testcase>

<testcase classname='12_stmt_loop' name='doWhile_1.java' time='10.416'>
</testcase>

<testcase classname='12_stmt_loop' name='doWhile_2_field_shadowing.java' time='10.322'>
</testcase>

<testcase classname='12_stmt_loop' name='for_decl.java' time='10.771'>
</testcase>

<testcase classname='12_stmt_loop' name='for_field_shadowing.java' time='10.892'>
</testcase>

<testcase classname='12_stmt_loop' name='for_simple.java' time='9.388'>
</testcase>

<testcase classname='12_stmt_loop' name='for_two_decls.java' time='9.856'>
</testcase>

<testcase classname='13_stmt_switch' name='switch_01_simple.java' time='10.686'>
<failure>
Expected output:

1: 1 2 3 
2: 2 3 
3: 3 
4: 
Done!

Actual output:

1: \n2: \n3: 1 2 3 \n4: \nDone!
</failure>
</testcase>

<testcase classname='13_stmt_switch' name='switch_02_multicase.java' time='10.697'>
<failure>
Expected output:

1: 1 2-3 
2: 2-3 
3: 2-3 
4: 
5: 
6: 
Done!

Actual output:

1: \n2: \n3: \n4: \n5: 1 2-3 \n6: \nDone!
</failure>
</testcase>

<testcase classname='13_stmt_switch' name='switch_03_default.java' time='9.87'>
<failure>
Expected output:

1: 1 2-default-3 4-5 
2: 2-default-3 4-5 
3: 2-default-3 4-5 
4: 4-5 
5: 4-5 
6: 
7: 
8: 2-default-3 4-5 
Done!

Actual output:

1: \n2: \n3: \n4: \n5: \n6: \n7: 1 2-default-3 4-5 \n8: \nDone!
</failure>
</testcase>

<testcase classname='13_stmt_switch' name='switch_04_break.java' time='10.633'>
<failure>
Expected output:

1: 1 
2: 2-default-3 4-5 
3: 2-default-3 4-5 
4: 4-5 
5: 4-5 
6: 
7: 
8: 2-default-3 4-5 
Done!

Actual output:

1: \n2: \n3: \n4: \n5: \n6: \n7: 1 \n8: \nDone!
</failure>
</testcase>

<testcase classname='13_stmt_switch' name='switch_05_break_loops.java' time='11.011'>
<failure>
Expected output:

1: 1, inner while, 2, after switch, after outer while.
Done!

Actual output:

1: after switch, after outer while.\nDone!
</failure>
</testcase>

<testcase classname='13_stmt_switch' name='switch_06_continue.java' time='36.169'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='13_stmt_switch' name='switch_07_break_label.java' time='9.362'>
<failure>
Expected output:

1: 1 , after switch.
2: 2 
3: 3 , after switch.
4: , after switch.
Done!

Actual output:

: "))) in(noVal) t(id(0) k(('label_1 : 16 @ {(14 @ (switch 'k{case i(3) : (8 @ ('System . 'out . 'print < s("1 ") > ;)) (9 @ break;) (11 @ ('System . 'out . 'print < s("2 ") > ;)) (12 @ break 'label_1 ;) 13 @ ('System . 'out . 'print < s("3 ") > ;)})) 15 @ ( 'System . 'out . 'print < s(", after switch.") > ;)}) -> (17 @ ('System . 'out . 'print < s("\n") > ;)) -> e(['k,l(2)]) -> return; -> noop) obj(o(f( onil) curr(t('switch_07_break_label)) curr(t('switch_07_break_label)) orig( t('switch_07_break_label)) orig(t('switch_07_break_label)))) fstack(fsi(; -> ((22 @ ('howMany < i(2) > ;)) (23 @ ('howMany < i(3) > ;)) (24 @ ( 'howMany < i(4) > ;)) 25 @ ('System . 'out . 'println < s("Done!") > ;)) -> e(['args,l(1)]) -> stop, id(0) obj(o(f(onil) curr(t( 'switch_07_break_label)) orig(t('switch_07_break_label)))) xstack(noItem) lstack(noItem) finalblocks(noItem) env(['args,l(1)]) holds(nil))) xstack( noItem) lstack(noItem) finalblocks(noItem) env(['k,l(2)]) holds(nil)) store([l(1),a(string, anil),0] [l(2),int(1),0]) code((public class t( 'RuntimeException) extends Object implements none {public string 'toString( noPara)throws(noType) {4 @ return s("java.lang.RuntimeException") ;} public t('RuntimeException)(noPara)throws(noType) super(noExp){nop}} public class t('switch_07_break_label) extends Object implements none {(default static) void 'howMany(int d('k))throws(noType) {(4 @ ('System . 'out . 'print < 'k > ;)) (4 @ ('System . 'out . 'print < s(": ") > ;)) (16 @ 'label_1 : 16 @ { (14 @ (switch 'k{case i(3) : (8 @ ('System . 'out . 'print < s("1 ") > ;)) (9 @ break;) (11 @ ('System . 'out . 'print < s("2 ") > ;)) (12 @ break 'label_1 ;) 13 @ ('System . 'out . 'print < s("3 ") > ;)})) 15 @ ('System . 'out . 'print < s(", after switch.") > ;)}) 17 @ ('System . 'out . 'print < s("\n") > ;)} (public static) void 'main(string[] d('args))throws(noType) { (21 @ ('howMany < i(1) > ;)) (22 @ ('howMany < i(2) > ;)) (23 @ ('howMany < i(3) > ;)) (24 @ ('howMany < i(4) > ;)) 25 @ ('System . 'out . 'println < s("Done!") > ;)} public t('switch_07_break_label)(noPara)throws(noType) super(noExp){nop}} public class t('java) . t('lang) . t('Object) extends Object implements none {public boolean 'equals(notFound d('obj))throws( noType) {4 @ return this == 'obj ;} public string 'toString(noPara)throws( noType) {8 @ return s("Object.toString()") ;} public t('java) . t('lang) . t('Object)(noPara)throws(noType) super(noExp){nop}})) static([t(t( 'RuntimeExceptio</failure>
</testcase>

<testcase classname='13_stmt_switch' name='switch_08_default_break.java' time='10.862'>
<failure>
Expected output:

1: 1 2-default-3 
2: 2-default-3 
3: 2-default-3 
4: 4-5 
5: 4-5 
6: 
7: 
8: 2-default-3 
Done!

Actual output:

1: \n2: \n3: \n4: \n5: \n6: \n7: 1 2-default-3 \n8: \nDone!
</failure>
</testcase>

<testcase classname='14_stmt_return' name='return_01_no_return.java' time='10.091'>
</testcase>

<testcase classname='14_stmt_return' name='return_02_ret_nothing.java' time='9.282'>
</testcase>

<testcase classname='14_stmt_return' name='return_03_ret_number.java' time='9.519'>
</testcase>

<testcase classname='14_stmt_return' name='return_04_ret_sum.java' time='10.963'>
</testcase>

<testcase classname='14_stmt_return' name='return_05_if_then_else.java' time='8.806'>
</testcase>

<testcase classname='14_stmt_return' name='return_06_while.java' time='10.754'>
</testcase>

<testcase classname='14_stmt_return' name='return_07_do_while.java' time='10.351'>
</testcase>

<testcase classname='14_stmt_return' name='return_08_for.java' time='8.801'>
</testcase>

<testcase classname='14_stmt_return' name='return_09_switch.java' time='8.924'>
<failure>
Expected output:

isPrime(10) = false
isPrime(9) = false
isPrime(7) = true
Done!

Actual output:

isPrime(10) = true
isPrime(9) = true
isPrime(7) = true
Done!
</failure>
</testcase>

<testcase classname='14_stmt_return' name='return_10_labeled.java' time='10.12'>
<failure>
Expected output:

isPrime(10) = false
isPrime(9) = false
isPrime(7) = true
Done!

Actual output:

</failure>
</testcase>

<testcase classname='14_stmt_return' name='return_11_try_ret_catch_finally.java' time='9.056'>
<failure>
Expected output:

f() = finally
1
Done!

Actual output:

f() = 1
Done!
</failure>
</testcase>

<testcase classname='14_stmt_return' name='return_12_try_catch_ret_finally.java' time='12.214'>
<failure>
Expected output:

f() = java.lang.RuntimeException
finally
2
Done!

Actual output:

</failure>
</testcase>

<testcase classname='14_stmt_return' name='return_13_try_catch_finally_ret.java' time='10.3'>
</testcase>

<testcase classname='14_stmt_return' name='return_14_try_ret_finally_ret.java' time='9.723'>
<failure>
Expected output:

f() = try
finally
3
Done!

Actual output:

f() = try
1
Done!
</failure>
</testcase>

<testcase classname='14_stmt_return' name='return_15_try_throw_finally_ret.java' time='10.946'>
<failure>
Expected output:

f() = try
finally
3
Done!

Actual output:

f() = try
Exception! f([t(t('RuntimeException</failure>
</testcase>

<testcase classname='14_stmt_return' name='return_16_try_catch_ret_finally_ret.java' time='10.492'>
<failure>
Expected output:

f() = try
java.lang.RuntimeException
finally
3
Done!

Actual output:

try"))) in(noVal) t(id(0) k( throw(o(f([t(t('RuntimeExceptio
</failure>
</testcase>

<testcase classname='14_stmt_return' name='return_17_ret_string.java' time='10.619'>
</testcase>

<testcase classname='14_stmt_return' name='return_18_ret_ref_exact.java' time='10.148'>
</testcase>

<testcase classname='14_stmt_return' name='return_19_ret_ref_derived.java' time='11.239'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

f() = Ex
Done!

Actual output:

</failure>
</testcase>

<testcase classname='14_stmt_return' name='return_20_block_env_restore.java' time='11.455'>
<failure>
Expected output:

try: b = 2
finally: b = 10
Done!

Actual output:

try: b = 2
Done!
</failure>
</testcase>

<testcase classname='15_stmt_throw' name='throw_01_try_catch.java' time='9.87'>
<failure>
Expected output:

java.lang.RuntimeException
Done!

Actual output:

</failure>
</testcase>

<testcase classname='15_stmt_throw' name='throw_02_try_catch_finally.java' time='9.876'>
<failure>
Expected output:

java.lang.RuntimeException
finally
Done!

Actual output:

</failure>
</testcase>

<testcase classname='15_stmt_throw' name='throw_03_tryCF_tryC.java' time='11.159'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

finally
caught ExA: ExA
Done!

Actual output:

</failure>
</testcase>

<testcase classname='15_stmt_throw' name='throw_04_tryF_tryCF.java' time='10.079'>
<failure>
Expected output:

finally
caught ExA: ExA
finally 2
Done!

Actual output:

</failure>
</testcase>

<testcase classname='15_stmt_throw' name='throw_05_try_catch_base.java' time='10.224'>
<failure>
Expected output:

caught: ExA
Done!

Actual output:

</failure>
</testcase>

<testcase classname='15_stmt_throw' name='throw_06_try_CCCF.java' time='9.655'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Caught Exception2
finally
Done!

Actual output:

</failure>
</testcase>

<testcase classname='15_stmt_throw' name='throw_07_try_mcall.java' time='10.744'>
<failure>
Expected output:

finally after uncaught exception
caught exception: java.lang.RuntimeException
Done!

Actual output:

</failure>
</testcase>

<testcase classname='15_stmt_throw' name='throw_08_stack_stmts.java' time='9.404'>
<failure>
Expected output:

java.lang.RuntimeException: while
java.lang.RuntimeException: do-while
java.lang.RuntimeException: for
java.lang.RuntimeException: switch
java.lang.RuntimeException: label
Done!

Actual output:

</failure>
</testcase>

<testcase classname='15_stmt_throw' name='throw_09_try_rethrow_try.java' time='10.424'>
<failure>
Expected output:

rethrowing: java.lang.RuntimeException
caught again: java.lang.RuntimeException
Done!

Actual output:

</failure>
</testcase>

<testcase classname='15_stmt_throw' name='throw_10_tryC_throw_F_tryC.java' time='9.756'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

caught: ExA
finally
caught 2: java.lang.RuntimeException
Done!

Actual output:

</failure>
</testcase>

<testcase classname='15_stmt_throw' name='throw_11_tryCF_throw_tryC.java' time='10.387'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

finally
caught 2: ExB
Done!

Actual output:

</failure>
</testcase>

<testcase classname='15_stmt_throw' name='throw_12_tryC_throw_C_tryC.java' time='10.149'>
<failure>
Expected output:

caught ExA: ExA
caught re 2: java.lang.RuntimeException
Done!

Actual output:

</failure>
</testcase>

<testcase classname='15_stmt_throw' name='throw_13_try_CF_no_throw.java' time='9.599'>
</testcase>

<testcase classname='15_stmt_throw' name='throw_14_catch_field_shadow.java' time='9.357'>
<failure>
Expected output:

caught exception: ExThrown
ExField
Done!

Actual output:

</failure>
</testcase>

<testcase classname='15_stmt_throw' name='throw_15_catch_env_restore.java' time='9.076'>
<failure>
Expected output:

2
java.lang.RuntimeException
10
Done!

Actual output:

</failure>
</testcase>

<testcase classname='15_stmt_throw' name='throw_16_followed_by_try.java' time='9.084'>
<failure>
Expected output:

java.lang.RuntimeException
Done!

Actual output:

</failure>
</testcase>

<testcase classname='16_stmt_throw_thread_term' name='thread_term_01_throw.java' time='3.501'>
<failure>
Expected output:

before ex
Thread terminated with exception: java.lang.RuntimeException: ex

Actual output:

</failure>
</testcase>

<testcase classname='16_stmt_throw_thread_term' name='thread_term_02_tryCF.java' time='3.501'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

finally after uncaught exception
Thread terminated with exception: Exception2: ex2

Actual output:

</failure>
</testcase>

<testcase classname='16_stmt_throw_thread_term' name='thread_term_03_mcall.java' time='3.495'>
<failure>
Expected output:

before ex
Thread terminated with exception: java.lang.RuntimeException: ex

Actual output:

</failure>
</testcase>

<testcase classname='17_stmt_break' name='break_01_while.java' time='11.067'>
</testcase>

<testcase classname='17_stmt_break' name='break_02_do.java' time='11.118'>
</testcase>

<testcase classname='17_stmt_break' name='break_03_for.java' time='11.252'>
</testcase>

<testcase classname='17_stmt_break' name='break_04_catch_for.java' time='9.744'>
</testcase>

<testcase classname='17_stmt_break' name='break_05_finally_for.java' time='10.386'>
<failure>
Expected output:

0-0 1-1 2-2 3-3 4-4 -5 
final i = 5
Done!

Actual output:

0-0 1-1 2-2 3-3 4-4 
final i = 5
Done!
</failure>
</testcase>

<testcase classname='17_stmt_break' name='break_06_for_field_shadowing.java' time='11.003'>
</testcase>

<testcase classname='17_stmt_break' name='break_07_L_while.java' time='10.964'>
<failure>
Expected output:

0 1 2 3 4 
final i = 5
Done!

Actual output:

</failure>
</testcase>

<testcase classname='17_stmt_break' name='break_08_L_do.java' time='9.632'>
<failure>
Expected output:

Done!

Actual output:

</failure>
</testcase>

<testcase classname='17_stmt_break' name='break_09_L_for.java' time='10.479'>
<failure>
Expected output:

0 1 2 3 4 
final i = 5
Done!

Actual output:

</failure>
</testcase>

<testcase classname='17_stmt_break' name='break_10_L_block_while.java' time='10.744'>
<failure>
Expected output:

0 1 2 3 4 
final i = 5
Done!

Actual output:

</failure>
</testcase>

<testcase classname='17_stmt_break' name='break_11_block_env_restore.java' time='8.993'>
<failure>
Expected output:

i = 0
try: b = 2
finally: b = 10
Done!

Actual output:

i = 0
try: b = 2
Done!
</failure>
</testcase>

<testcase classname='17_stmt_break' name='break_label_1_block_simple.java' time='9.697'>
<failure>
Expected output:

Before break
Done!

Actual output:

</failure>
</testcase>

<testcase classname='17_stmt_break' name='break_label_2_nested_labeled.java' time='8.467'>
<failure>
Expected output:

Before break
Done!

Actual output:

</failure>
</testcase>

<testcase classname='17_stmt_break' name='break_label_3_block_in_while.java' time='9.457'>
<failure>
Expected output:

Before break 0, after break 0
Before break 1, after break 1
Before break 2, after break 2
Done!

Actual output:

</failure>
</testcase>

<testcase classname='17_stmt_break' name='break_label_4_for.java' time='10.453'>
<failure>
Expected output:

0 1 2 3 4 
final i = 5
Done!

Actual output:

</failure>
</testcase>

<testcase classname='17_stmt_break' name='break_label_5_finally_in_for.java' time='10.596'>
<failure>
Expected output:

0-0 1-1 2-2 3-3 4-4 -5 
final i = 5
Done!

Actual output:

</failure>
</testcase>

<testcase classname='17_stmt_break' name='break_label_6_catch_in_for.java' time='10.625'>
<failure>
Expected output:

0 1 2 3 4 
final i = 5
Done!

Actual output:

</failure>
</testcase>

<testcase classname='17_stmt_break' name='graph_break.java' time='11.128'>
<failure>
Expected output:

Init graph:
0 |-> 0 1 2 3 
1 |-> 1 2 3 0 
2 |-> 2 3 0 1 
3 |-> 3 0 1 2 

Graph without edges (1,2),(2,1):
0 |-> 0 1 2 3 
1 |-> 1 3 0 
2 |-> 2 3 0 
3 |-> 3 0 1 2 
Done!

Actual output:

\n"))) in(noVal) t(id(0) k( a(int[], [0,l(7)] [1,l(12)] [2,l(17)] [3,l(22)]) -> .('length) -> [noExp | int(0)] -> < -> while('i < 'edges . 'length, 'i ++, 51 @ {(46 @ ('System . 'out . 'print < 'i > ;)) (46 @ ('System . 'out . 'print < s(" |-> ") > ;)) (49 @ (for(int d('j) = i(0) ; 'j < ('edges['i]) . 'length ; 'j ++)49 @ {(48 @ ('System . 'out . 'print < 'edges['i]['j] > ;)) 48 @ ('System . 'out . 'print < s(" ") > ;)})) 50 @ ('System . 'out . 'print < s("\n") > ;)}) -> popLStack -> e(noEnv) -> e(noEnv) -> return; -> noop) obj(o(f([t(t( 'Grap</failure>
</testcase>

<testcase classname='17_stmt_break' name='label_propagation_01_block.java' time='10.883'>
<failure>
Expected output:

Inside doWhile
Done!

Actual output:

</failure>
</testcase>

<testcase classname='17_stmt_break' name='label_propagation_02_while.java' time='10.74'>
<failure>
Expected output:

Inside doWhile
Done!

Actual output:

</failure>
</testcase>

<testcase classname='17_stmt_break' name='label_propagation_03_for.java' time='9.381'>
<failure>
Expected output:

Inside doWhile
Done!

Actual output:

</failure>
</testcase>

<testcase classname='18_stmt_continue' name='continue_01_while.java' time='35.888'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='18_stmt_continue' name='continue_02_do_1.java' time='34.693'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='18_stmt_continue' name='continue_03_do_2.java' time='36.673'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='18_stmt_continue' name='continue_04_for.java' time='34.932'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='18_stmt_continue' name='continue_05_two_loops.java' time='36.36'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='18_stmt_continue' name='continue_06_catch_for.java' time='36.129'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='18_stmt_continue' name='continue_07_finally_for.java' time='36.412'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='18_stmt_continue' name='continue_08_for_field_shadowing.java' time='35.885'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='18_stmt_continue' name='continue_09_while_label.java' time='10.819'>
<failure>
Expected output:

0 2 4 6 8 
Done!

Actual output:

</failure>
</testcase>

<testcase classname='18_stmt_continue' name='continue_10_for_label.java' time='10.517'>
<failure>
Expected output:

0 2 4 6 8 
Done!

Actual output:

</failure>
</testcase>

<testcase classname='18_stmt_continue' name='continue_11_block_env_restore.java' time='37.152'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='18_stmt_continue' name='continue_label_01_while.java' time='8.868'>
<failure>
Expected output:

0 2 4 6 8 
Done!

Actual output:

</failure>
</testcase>

<testcase classname='18_stmt_continue' name='continue_label_02_do_1.java' time='8.113'>
<failure>
Expected output:

0 2 4 6 8 
Done!

Actual output:

</failure>
</testcase>

<testcase classname='18_stmt_continue' name='continue_label_03_do_2.java' time='10.418'>
<failure>
Expected output:

1 3 5 7 9 
Done!

Actual output:

</failure>
</testcase>

<testcase classname='18_stmt_continue' name='continue_label_04_for.java' time='9.147'>
<failure>
Expected output:

0 2 4 6 8 
Done!

Actual output:

</failure>
</testcase>

<testcase classname='18_stmt_continue' name='continue_label_05_catch_for.java' time='8.913'>
<failure>
Expected output:

0 2 4 6 8 
final i = 10
Done!

Actual output:

</failure>
</testcase>

<testcase classname='18_stmt_continue' name='continue_label_06_finally_for.java' time='7.63'>
<failure>
Expected output:

0-0 1 2-2 3 4-4 5 6-6 7 8-8 9 
final i = 10
Done!

Actual output:

</failure>
</testcase>

<testcase classname='18_stmt_continue' name='continue_label_07_while_L_w.java' time='9.391'>
<failure>
Expected output:

0 2 4 6 8 
Done!

Actual output:

</failure>
</testcase>

<testcase classname='18_stmt_continue' name='continue_label_08_L_while_L_w.java' time='10.727'>
<failure>
Expected output:

0 2 4 6 8 
Done!

Actual output:

</failure>
</testcase>

<testcase classname='18_stmt_continue' name='continue_label_09_for_L_w.java' time='8.636'>
<failure>
Expected output:

0 2 4 6 8 
Done!

Actual output:

</failure>
</testcase>

<testcase classname='18_stmt_continue' name='continue_label_10_L_for_L_w.java' time='9.971'>
<failure>
Expected output:

0 2 4 6 8 
Done!

Actual output:

</failure>
</testcase>

<testcase classname='18_stmt_continue' name='continue_label_11_L_block_L_w.java' time='10.411'>
<failure>
Expected output:

0 2 4 6 8 
Done!

Actual output:

</failure>
</testcase>

<testcase classname='18_stmt_continue' name='graph_continue.java' time='10.367'>
<failure>
Expected output:

Init graph:
0 |-> 0 1 2 3 
1 |-> 1 2 3 0 
2 |-> 2 3 0 1 
3 |-> 3 0 1 2 

Graph without edges (1,2),(2,1):
0 |-> 0 1 2 3 
1 |-> 1 3 0 
2 |-> 2 3 0 
3 |-> 3 0 1 2 
Done!

Actual output:

\n"))) in(noVal) t(id(0) k( a(int[], [0,l(7)] [1,l(12)] [2,l(17)] [3,l(22)]) -> .('length) -> [noExp | int(0)] -> < -> while('i < 'edges . 'length, 'i ++, 49 @ {(44 @ ('System . 'out . 'print < 'i > ;)) (44 @ ('System . 'out . 'print < s(" |-> ") > ;)) (47 @ (for(int d('j) = i(0) ; 'j < ('edges['i]) . 'length ; 'j ++)47 @ {(46 @ ('System . 'out . 'print < 'edges['i]['j] > ;)) 46 @ ('System . 'out . 'print < s(" ") > ;)})) 48 @ ('System . 'out . 'print < s("\n") > ;)}) -> popLStack -> e(noEnv) -> e(noEnv) -> return; -> noop) obj(o(f([t(t( 'Grap</failure>
</testcase>

<testcase classname='21_arrays' name='array_01_overview.java' time='8.573'>
<failure>
Expected output:

0
1
0
1
2
s0
s1
s2
s3
true
true
java.lang.RuntimeException: re0
java.lang.RuntimeException: re1
Done!

Actual output:

1
0
1
2))) in(noVal) t(id(0) k((str("s"),int(0)) -> + -> =(l(11)) -> ; -> (27 @ ( 'System . 'out . 'println < 'vs['i] > ;)) -> e(['i,l(16)] ['vi,l(4)] ['vs, l(15)] ['vsh,l(9)]) -> 'i ++ -> ; -> ('i < i(4)) -> while('i < i(4), 'i ++, 28 @ {(26 @ ('vs['i] = s("s") + 'i ;)) 27 @ ('System . 'out . 'println < 'vs['i] > ;)}) -> popLStack -> e(['vi,l(4)] ['vs,l(15)] ['vsh,l(9)]) -> ((( notFound).Type d('vo) = new notFound [i(2)] ;) (34 @ (for(int d('i) = i(0) ; 'i < i(2) ; 'i ++)34 @ {(32 @ ('vo['i] = new notFound < noExp > ;)) 33 @ ('System . 'out . 'println < 'vo['i] != null > ;)})) (t('RuntimeException)[ ] d('vre) = new t('RuntimeException) [i(2)] ;) 40 @ (for(int d('i) = i(0) ; 'i < i(2) ; 'i ++)40 @ {(38 @ ('vre['i] = new t('RuntimeException) < s( "re") + 'i > ;)) 39 @ ('System . 'out . 'println < 'vre['i] > ;)})) -> e( noEnv) -> constrReturn) obj(o(f([t(t('main
</failure>
</testcase>

<testcase classname='21_arrays' name='array_02_assign_type_preserv.java' time='8.54'>
</testcase>

<testcase classname='21_arrays' name='array_03_ref_assign_type_preserv.java' time='9.328'>
<failure>
Expected output:

1
Done!

Actual output:

2
Done!
</failure>
</testcase>

<testcase classname='21_arrays' name='array_04_alloc_multidim.java' time='9.984'>
<failure>
Expected output:

0 1 2 3 1 2 3 4 2 3 4 5 1 2 3 4 2 3 4 5 3 4 5 6 

Done!

Actual output:

0 1 2 3 1 2 3 4 2 3 4 5 1 2 3 4 2 3 4 5 3 4 5 6 
\nDone!
</failure>
</testcase>

<testcase classname='21_arrays' name='array_05_alloc_boundary.java' time='9.905'>
<failure>
Expected output:

falsefalse
Done!

Actual output:

truetrue\nDone!
</failure>
</testcase>

<testcase classname='21_arrays' name='array_06_alloc_NASException.java' time='36.606'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='21_arrays' name='array_07_alloc_dim_expr_types.java' time='9.622'>
<failure>
Expected output:

int
short
byte
char

Done!

Actual output:

short
byte"))) in( noVal) t(id(0) k(inita(string[], str("'x'")) -> =(l(2)) -> ; -> ((27 @ ('v[ i(1)] = s("char") ;)) 28 @ ('System . 'out . 'println < 'v[i(1)] > ;)) -> e(noEnv) -> constrReturn) obj(o(f([t(t('mai
</failure>
</testcase>

<testcase classname='21_arrays' name='array_08_alloc_order_of_dims.java' time='9.589'>
<failure>
Expected output:

123
java.lang.ArithmeticException: / by zero
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_09_decl_C_style.java' time='10.068'>
<failure>
Expected output:

44
555
6666
1 1

Done!

Actual output:

44
555
6666
1 1
\nDone!
</failure>
</testcase>

<testcase classname='21_arrays' name='array_10_access_index_types.java' time='11.172'>
<failure>
Expected output:

int
short
5
char

Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_11_access_AOOBException.java' time='9.836'>
<failure>
Expected output:

java.lang.ArrayIndexOutOfBoundsException: -2
java.lang.ArrayIndexOutOfBoundsException: -2
java.lang.ArrayIndexOutOfBoundsException: 2
java.lang.ArrayIndexOutOfBoundsException: 3
java.lang.ArrayIndexOutOfBoundsException: 0
java.lang.ArrayIndexOutOfBoundsException: -1
java.lang.ArrayIndexOutOfBoundsException: 3
java.lang.ArrayIndexOutOfBoundsException: 15

Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_12_access_eval_order.java' time='10.535'>
<failure>
Expected output:

2
java.lang.ArithmeticException: / by zero
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_13_access_null.java' time='8.893'>
<failure>
Expected output:

java.lang.NullPointerException
java.lang.NullPointerException
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_14_assign_one_dim_1.java' time='9.371'>
</testcase>

<testcase classname='21_arrays' name='array_15_assign_one_dim_2.java' time='8.008'>
</testcase>

<testcase classname='21_arrays' name='array_16_assign_multidim.java' time='9.751'>
</testcase>

<testcase classname='21_arrays' name='array_17_length.java' time='10.707'>
<failure>
Expected output:

4
0
3 0 0 
java.lang.NullPointerException
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_18_clone.java' time='10.326'>
<failure>
Expected output:

false : 
Matrix false : 
end matrix.

false : truetrue
Matrix false : 
true : 
true : 
end matrix.

Matrix false : 
true : truetrue
true : truetrue
end matrix.

Object[] : false : true true true true 
Null tests:
java.lang.NullPointerException
Matrix false : 
true : truetrue
true : null+null
end matrix.

Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_19_clone_polymorphism.java' time='9.959'>
<failure>
Expected output:

false : truetrue
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_20_instanceof.java' time='9.439'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

true
false
true
false
true
false
false
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_21_instanceof_complex.java' time='9.105'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

false
true
false
false
false
false
true
false
false
false
false
false
false
false
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_22_polymorph_array_assign.java' time='8.189'>
<failure>
Expected output:

true
true
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_23_polymorph_elem_read.java' time='10.857'>
<failure>
Expected output:

null java.lang.NullPointerException: npe 
ovre[0] = java.lang.NullPointerException: npe2
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_24_polymorph_elem_write.java' time='10.815'>
<failure>
Expected output:

null java.lang.NullPointerException: npe 
ovre[0] = java.lang.NullPointerException: npe2
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_25_polymorph_matrix.java' time='9.562'>
<failure>
Expected output:

java.lang.NullPointerException: npe
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_26_polymorph_obj_array.java' time='8.457'>
<failure>
Expected output:

[I
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_27_ASException.java' time='11.179'>
<failure>
Expected output:

true
java.lang.ArrayStoreException: Point
java.lang.ArrayStoreException: Point2
Done!

Actual output:

true
ok
ok
Done!
</failure>
</testcase>

<testcase classname='21_arrays' name='array_28_ASException_matrix.java' time='10.043'>
<failure>
Expected output:

java.lang.ArrayStoreException: [Ljava.lang.Object;
ok
ok
java.lang.ArrayStoreException: java.lang.Object
java.lang.ArrayStoreException: java.lang.RuntimeException
ok
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_29_ASException_obj_array.java' time='10.034'>
<failure>
Expected output:

java.lang.ArrayStoreException: [B
java.lang.ArrayStoreException: [S
ok: int[]
java.lang.ArrayStoreException: [J
java.lang.ArrayStoreException: [C
java.lang.ArrayStoreException: [Z
java.lang.ArrayStoreException: [Ljava.lang.String;
java.lang.ArrayStoreException: [Ljava.lang.Object;
java.lang.ArrayStoreException: [[I
Done!

Actual output:

ok: short[]
ok: int[]
ok: long[]
ok: char[]
ok: boolean[]
ok: String[]"))) in(noVal) t(id(0) k(inita( notFound, int(2)) -> =(l(2)) -> ; -> (50 @ ('System . 'out . 'println < s( "ok: Object[]") > ;)) -> e(['args,l(1)] ['vo,l(3)]) -> restoreXStack( noItem) -> ((61 @ (try {(55 @ ('vo[i(0)] = new int [i(2)][] ;)) 56 @ ( 'System . 'out . 'println < s("ok: int[][]") > ;)} catch(notFound d('e)){58 @ ('System . 'out . 'println < 'e > ;)})) 61 @ ('System . 'out . 'println < s("Done!") > ;)) -> e(['args,l(1)]) -> stop) obj(o(f(onil) curr(t( 'array_29_ASException_obj_array)) orig(t( 'array_29_ASException_obj_array)))) fstack(noItem) xstack(exi(notFound, 'e, {52 @ ('System . 'out . 'println < 'e > ;)} -> e(['args,l(1)] ['vo,l(3)]) -> ((61 @ (try {(55 @ ('vo[i(0)] = new int [i(2)][] ;)) 56 @ ('System . 'out . 'println < s("ok: int[][]") > ;)} catch(notFound d('e)){58 @ ( 'System . 'out . 'println < 'e > ;)})) 61 @ ('System . 'out . 'println < s( "Done!") > ;)) -> e(['args,l(1)]) -> stop, id(0) obj(o(f(onil) curr(t( 'array_29_ASException_obj_array)) orig(t( 'array_29_ASException_obj_array)))) fstack(noItem) xstack(noItem) lstack( noItem) finalblocks(noItem) env(['args,l(1)] ['vo,l(3)]) holds(nil))) lstack(noItem) finalblocks(noItem) env(['args,l(1)] ['vo,l(3)]) holds(nil)) store([l(1),a(string, anil),0] [l(2),a(string, [0,l(16)] [1,l(17)]),0] [l( 3),a(int[], [0,l(2)]),0] [l(4),int(0),0] [l(5),int(0),0] [l(6),int(0),0] [ l(7),int(0),0] [l(8),int(0),0] [l(9),int(0),0] [l(10),int(0),0] [l(11),int( 0),0] [l(12),nullv,0] [l(13),nullv,0] [l(14),bool(true),0] [l(15),bool( true),0] [l(16),nullv,0] [l(17),nullv,0]) code((public class t( 'RuntimeException) extends Object implements none {public string 'toString( noPara)throws(noType) {4 @ return s("java.lang.RuntimeException") ;} public t('RuntimeException)(noPara)throws(noType) super(noExp){nop}} public class t('array_29_ASException_obj_array) extends Object implements none {(public static) void 'main(string[] d('args))throws(noType) {((notFound).Type d( 'vo) = new int [i(1)][] ;) (12 @ (try {(7 @ ('vo[i(0)] = new byte [i(2)] ;)) 8 @ ('System . 'out . 'println < s("ok: byte[]") > ;)} catch(notFound d('e)){10 @ ('System . 'out . 'println < 'e > ;)})) (18 @ (try {(13 @ ('vo[ i(0)] = new short [i(2)] ;)) 14 @ ('System . 'out . 'println < s( "ok: short[]") > ;)} catch(notFound d('e)){16 @ ('System . 'out . 'println < 'e > ;)})) (24 @ (try {(19 @ ('vo[i(0)] = new int [i(2)] ;)) 20 @ ( 'System . 'out . 'println < s("ok: int[]") > ;)} catch(notFound d('e)){22 @ ('System . 'out . 'println < 'e > ;)})) (30 @ (try {(25 @ ('vo[i(0)] = new long [i(2)] ;)) 26 @ ('System . 'out . 'println < s("ok: long[]") > ;)} catch(notFound d('e)){28 @ ('System . 'out . 'println < 'e > ;)})) (36 @ ( try {(31 @ ('vo[i(0)] = new char [i(2)] ;)) 32 @ ('System . 'out . 'println < s("ok: char[]") > ;)} catch(notFound d('e)){34 @ ('System . 'out . 'println < 'e > ;)})) (42 @ (try {(37 @ ('vo[i(0)] = new boolean [i(2)] ;)) 38 @ ('System . 'out . 'println < s("ok: boolean[]") > ;)} catch(notFound d('e)){40 @ ('System . 'out . 'println < 'e > ;)})) (48 @ (try {(43 @ ('vo[ i(0)] = new string [i(2)] ;)) 44 @ ('System . 'out . 'println < s( "ok: String[]") > ;)} catch(notFound d('e)){46 @ ('System . 'out . 'println < 'e > ;)})) (54 @ (try {(49 @ ('vo[i(0)] = new notFound [i(2)] ;)) 50 @ ( 'System . 'out . 'println < s("ok: Object[]") > ;)} catch(notFound d('e)){ 52 @ ('System . 'out . 'println < 'e > ;)})) (61 @ (try {(55 @ ('vo[i(0)] = new int [i(2)][] ;)) 56 @ ('System . 'out . 'println < s("ok: int[][]") > ;)} catch(notFound d('e)){58 @ ('System . 'out . 'println < 'e > ;)})) 61 @ ('System . 'out . 'println < s("Done!") > ;)} public t( 'array_29_ASException_obj_array)(noPara)throws(noType) super(noExp){nop}} public class t('java) . t('lang) . t('Object) extends Object implements none {public boolean 'equals(notFound d('obj))throws(noType) {4 @ return this == 'obj ;} public string 'toString(noPara)throws(noType) {8 @ return s("Object.toString()") ;} public t('java) . t('lang) . t('Object)( noPara)throws(noType) super(noExp){nop}})) static([t(t('RuntimeExceptio
</failure>
</testcase>

<testcase classname='21_arrays' name='array_30_ASException_no_assign.java' time='12.198'>
<failure>
Expected output:

before exception: null
java.lang.ArrayStoreException: java.lang.Object
after exception: null
Done!

Actual output:

noVal) t(id( 0) k(new notFound < noExp > -> =(l(2)) -> ; -> ((9 @ ('System . 'out . 'print < s("ok: ") > ;)) 9 @ ('System . 'out . 'println < 'vo[i(0)] > ;)) -> e(['args,l(1)] ['vo,l(3)]) -> restoreXStack(noItem) -> (14 @ ('System . 'out . 'println < s("Done!") > ;)) -> e(['args,l(1)]) -> stop) obj(o(f( onil) curr(t('array_30_ASException_no_assign)) orig(t( 'array_30_ASException_no_assign)))) fstack(noItem) xstack(exi(notFound, 'e, {(11 @ ('System . 'out . 'println < 'e > ;)) (12 @ ('System . 'out . 'print < s("after exception: ") > ;)) 12 @ ('System . 'out . 'println < 'vo[i(0)] > ;)} -> e(['args,l(1)] ['vo,l(3)]) -> (14 @ ('System . 'out . 'println < s("Done!") > ;)) -> e(['args,l(1)]) -> stop, id(0) obj(o(f(onil) curr(t( 'array_30_ASException_no_assign)) orig(t( 'array_30_ASException_no_assign)))) fstack(noItem) xstack(noItem) lstack( noItem) finalblocks(noItem) env(['args,l(1)] ['vo,l(3)]) holds(nil))) lstack(noItem) finalblocks(noItem) env(['args,l(1)] ['vo,l(3)]) holds(nil)) store([l(1),a(string, anil),0] [l(2),nullo,0] [l(3),a(t('RuntimeException), [0,l(2)]),0]) code((public class t('RuntimeException) extends Object implements none {public string 'toString(noPara)throws(noType) {4 @ return s("java.lang.RuntimeException") ;} public t('RuntimeException)( noPara)throws(noType) super(noExp){nop}} public class t( 'array_30_ASException_no_assign) extends Object implements none {(public static) void 'main(string[] d('args))throws(noType) {((notFound).Type d( 'vo) = new t('RuntimeException) [i(1)] ;) (5 @ ('vo[i(0)] = null ;)) (6 @ ( 'System . 'out . 'print < s("before exception: ") > ;)) (6 @ ('System . 'out . 'println < 'vo[i(0)] > ;)) (14 @ (try {(8 @ ('vo[i(0)] = new notFound < noExp > ;)) (9 @ ('System . 'out . 'print < s("ok: ") > ;)) 9 @ ('System . 'out . 'println < 'vo[i(0)] > ;)} catch(notFound d('e)){(11 @ ( 'System . 'out . 'println < 'e > ;)) (12 @ ('System . 'out . 'print < s( "after exception: ") > ;)) 12 @ ('System . 'out . 'println < 'vo[i(0)] > ;)})) 14 @ ('System . 'out . 'println < s("Done!") > ;)} public t( 'array_30_ASException_no_assign)(noPara)throws(noType) super(noExp){nop}} public class t('java) . t('lang) . t('Object) extends Object implements none {public boolean 'equals(notFound d('obj))throws(noType) {4 @ return this == 'obj ;} public string 'toString(noPara)throws(noType) {8 @ return s("Object.toString()") ;} public t('java) . t('lang) . t('Object)( noPara)throws(noType) super(noExp){nop}})) static([t(t('RuntimeException
</failure>
</testcase>

<testcase classname='21_arrays' name='array_31_cast.java' time='11.414'>
<failure>
Expected output:

null java.lang.NullPointerException: npe 
java.lang.ClassCastException: [Ljava.lang.RuntimeException; cannot be cast to [Ljava.lang.NullPointerException;
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_32_init_one_dim.java' time='11.944'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

1 3 7 
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_33_init_multidim.java' time='11.323'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

1 2 
3 
null

Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_34_init_string.java' time='12.269'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

abc de 
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_35_init_seqstrict.java' time='11.468'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

0 1 2 
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_36_init_polymorph.java' time='10.088'>
<failure>
Expected output:

java.lang.RuntimeException: re 

Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_37_init_inner_array_type.java' time='10.937'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Inner array is of type Object[]
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_38_init_decl_one_dim.java' time='11.607'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

1 3 7 
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_39_init_decl_multidim_1.java' time='12.097'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

1 2 
3 
null

Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_40_init_decl_multidim_2.java' time='12.019'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

1 
2 

null

1 
2 

null

Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_41_init_decl_complex_stm.java' time='12.099'>
<failure>
Expected output:

1 2 
3 4 
11 
null

7 

null

null
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_42_default_val_primitive.java' time='12.033'>
<failure>
Expected output:

0 0
0 0
0 0
0 0
   
false false
Done!

Actual output:

0 0
0 0
0 0
0 0
str(" "bool(true
 true
Done!
</failure>
</testcase>

<testcase classname='21_arrays' name='array_43_default_val_ref.java' time='10.113'>
<failure>
Expected output:

null null
null null
null null
null null
null null
Done!

Actual output:

</failure>
</testcase>

<testcase classname='21_arrays' name='array_44_side_effect_exp.java' time='11.154'>
</testcase>

<testcase classname='22_basic_jvm_exc' name='jvm_exc_01_arith_exc.java' time='8.737'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "2L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.VariableInitializer(JavaWrapper.java:780)
	at javarl.JavaWrapper.VariableDeclarator(JavaWrapper.java:714)
	at javarl.JavaWrapper.LocalVariableDeclaration(JavaWrapper.java:2632)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2559)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.TryStatement(JavaWrapper.java:3185)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2471)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

java.lang.ArithmeticException: / by zero
java.lang.ArithmeticException: / by zero
java.lang.ArithmeticException: / by zero
Done!

Actual output:

</failure>
</testcase>

<testcase classname='22_basic_jvm_exc' name='jvm_exc_02_NPE.java' time='9.935'>
<failure>
Expected output:

java.lang.NullPointerException
java.lang.NullPointerException
java.lang.NullPointerException
Done!

Actual output:

</failure>
</testcase>

<testcase classname='22_basic_jvm_exc' name='jvm_exc_03_cast_exc_hierarchy.java' time='12.3'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

java.lang.ClassCastException: A cannot be cast to D
java.lang.ClassCastException: C cannot be cast to D
Done!

Actual output:

</failure>
</testcase>

<testcase classname='22_basic_jvm_exc' name='jvm_exc_04_cast_exc_types.java' time='11.631'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

java.lang.ClassCastException: UserClass cannot be cast to java.lang.String
java.lang.ClassCastException: [I cannot be cast to java.lang.String
java.lang.ClassCastException: UserClass cannot be cast to [I
java.lang.ClassCastException: java.lang.String cannot be cast to [I
java.lang.ClassCastException: java.lang.String cannot be cast to UserClass
java.lang.ClassCastException: [I cannot be cast to UserClass
Done!

Actual output:

</failure>
</testcase>

<testcase classname='31_diverse' name='all_sorting.java' time='11.55'>
<failure>
Expected output:

Size of the array to sort = Type 4 numbers: Finished reading the 4 numbers
The original unsorted array is:
8312 
Reversing the array ... Done!
The reversed array is:
2138 
Sorting the array using insertion sort ... Done!
The resulting array is:
1238 
Reversing the array ... Done!
Sorting the array using bubble sort ... Done!
The resulting array is:
1238 
Reversing the array ... Done!
Sorting the array using heap sort ... Done!
The resulting array is:
1238 
Done!

Actual output:

</failure>
</testcase>

<testcase classname='31_diverse' name='bubble.java' time='12.805'>
<failure>
Expected output:

Length of array = Input each of the 4 elements of the array
Element 0 = Element 1 = Element 2 = Element 3 = Sorting the array using bubble sort ... Done!
Below is the sorted sequence:
Element 0 = 1
Element 1 = 2
Element 2 = 3
Element 3 = 8
Done!

Actual output:

</failure>
</testcase>

<testcase classname='31_diverse' name='collatz.java' time='12.671'>
<failure>
Expected output:

Testing Collatz' conjecture up to what number? Testing Collatz' conjecture for n = 1 ... Done! It took 0 steps.
Testing Collatz' conjecture for n = 2 ... Done! It took 1 steps.
Testing Collatz' conjecture for n = 3 ... Done! It took 7 steps.
Testing Collatz' conjecture for n = 4 ... Done! It took 2 steps.
Testing Collatz' conjecture for n = 5 ... Done! It took 5 steps.
It appears to hold.
Done!

Actual output:

</failure>
</testcase>

<testcase classname='31_diverse' name='factorial.java' time='12.108'>
<failure>
Expected output:

Input a natural numer: Factorial of 5 is: 120
Done!

Actual output:

</failure>
</testcase>

<testcase classname='31_diverse' name='heap.java' time='10.063'>
<failure>
Expected output:

Length of array = Input each of the 4 elements of the array
Element 0 = Element 1 = Element 2 = Element 3 = Sorting the array using heap sort ... Done!
Below is the sorted sequence:
Element 0 = 1
Element 1 = 2
Element 2 = 3
Element 3 = 8
Done!

Actual output:

</failure>
</testcase>

<testcase classname='31_diverse' name='insertion1.java' time='11.423'>
<failure>
Expected output:

The original sequence is 110 109 108 107 106 105 104 103 102 101
Sorting the array using insertion sort ... Sort completed.
The sorted sequence is 101 102 103 104 105 106 107 108 109 110
Done!

Actual output:

</failure>
</testcase>

<testcase classname='31_diverse' name='insertion2.java' time='11.984'>
<failure>
Expected output:

The original sequence is 110 109 108 107 106 105 104 103 102 101
Sorting the array using insertion sort ... Sort completed.
The sorted sequence is 101 102 103 104 105 106 107 108 109 110
Done!

Actual output:

</failure>
</testcase>

<testcase classname='31_diverse' name='matrixMul.java' time='12.269'>
<failure>
Expected output:

M1=
0 1 2 
1 2 3 
M2=
1 1 
1 1 
1 1 
M1 * M2 = 
3 3 
6 6 
Done!

Actual output:

</failure>
</testcase>

<testcase classname='31_diverse' name='odd_even.java' time='11.332'>
</testcase>

<testcase classname='31_diverse' name='point.java' time='11.126'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

x = 4, y = 6
x = 17, y = 28
color = 87
Done!

Actual output:

</failure>
</testcase>

<testcase classname='31_diverse' name='tree_sum.java' time='11.54'>
<failure>
Expected output:

12
o.left.Sum = 7
Done!

Actual output:

o.left.Sum = "))) in(noVal) t(id(0) k((int(7),str("\n")) -> + -> call(o(curr(System) orig(Syste</failure>
</testcase>

<testcase classname='32_java_api_core' name='Object_equals.java' time='8.813'>
<failure>
Expected output:

true
false
Done!

Actual output:

</failure>
</testcase>

<testcase classname='32_java_api_core' name='exception_toString.java' time='9.986'>
<failure>
Expected output:

java.lang.RuntimeException: abc
java.lang.RuntimeException: 
java.lang.RuntimeException
Done!

Actual output:

</failure>
</testcase>

<testcase classname='obj_getClass_getName' name='className_01.java' time='13.024'>
<failure>
Expected output:

java.lang.Object
java.lang.RuntimeException
java.lang.String
Done!

Actual output:

</failure>
</testcase>

<testcase classname='obj_getClass_getName' name='className_02.java' time='12.5'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

java.lang.RuntimeException
java.lang.String
Done!

Actual output:

</failure>
</testcase>

<testcase classname='obj_getClass_getName' name='className_03_user_classes.java' time='12.883'>
<failure>
Expected output:

new Musketeer().getClass().getName() = Musketeer
dartagnanDA.getClass().getName() = DArtagnan
musketeerDA.getClass().getName() = DArtagnan
objectDA.getClass().getName() = DArtagnan
Done!

Actual output:

</failure>
</testcase>

<testcase classname='obj_getClass_getName' name='className_04_package.java' time='5.467'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/32_java_api_core/obj_getClass_getName/className_04_package.java: Is a directory
Error: Could not find or load main class className_04_package
</error>
</testcase>

<testcase classname='obj_getClass_getName' name='className_05_array_primitive.java' time='11.007'>
<failure>
Expected output:

[B
[S
[I
[J
[C
[Z

Done!

Actual output:

</failure>
</testcase>

<testcase classname='obj_getClass_getName' name='className_06_array_ref.java' time='11.538'>
<failure>
Expected output:

[Ljava.lang.Object;
[Ljava.lang.String;
[Ljava.lang.RuntimeException;

Done!

Actual output:

</failure>
</testcase>

<testcase classname='obj_getClass_getName' name='className_07_array_multidim.java' time='11.094'>
<failure>
Expected output:

[[I
[[Z
[[Ljava.lang.String;
[[Ljava.lang.RuntimeException;
[[[Ljava.lang.Object;

Done!

Actual output:

</failure>
</testcase>

<testcase classname='32_java_api_core' name='obj_method_03_toString.java' time='12.212'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

java.lang.RuntimeException
Done!

Actual output:

</failure>
</testcase>

<testcase classname='41_method_basic' name='method_01_return_void.java' time='12.166'>
</testcase>

<testcase classname='41_method_basic' name='method_02_return_types.java' time='11.204'>
<failure>
Expected output:

18
true
abc
fRE(re)
java.lang.RuntimeException: re
11 22
fRE(obj re)
fRE(ignored re)
Done!

Actual output:

true
abc
fRE(re)"))) in(noVal) t(id(0) k(getConstr(public string 'toString(noPara)throws(noType) {4 @ return s( "java.lang.RuntimeException") ;}, string) -> createObj(t( 'RuntimeException), str("re")) -> return -> e(['s,l(2)]) -> return; -> noop) obj(o(f([t(t('mai
</failure>
</testcase>

<testcase classname='41_method_basic' name='method_03_arg_types.java' time='11.526'>
<failure>
Expected output:

12
12
false
false
abc
abc
java.lang.RuntimeException: big re
java.lang.RuntimeException: big re
100 101 
Done!

Actual output:

12
false
false
abc
abc"))) in(noVal) t(id(0) k(getConstr(public string 'toString(noPara)throws(noType) {4 @ return s("java.lang.RuntimeException") ;}, string) -> createObj(t('RuntimeException), str("big re")) -> call('fRE) -> call(o(curr(System) orig(Syste
</failure>
</testcase>

<testcase classname='41_method_basic' name='method_04_multi.java' time='10.601'>
<failure>
Expected output:

-12
14
0
Done!

Actual output:

14))) in(noVal) t(id(0) k(a(int, anil) -> .('length) -> return -> e(['v,l(2)]) -> return; -> noop) obj(o(f([ t(t('main
</failure>
</testcase>

<testcase classname='41_method_basic' name='method_05_arg_conv.java' time='11.495'>
<failure>
Expected output:

12 -31072 java.lang.RuntimeException: re sss
12 13 null null
Done!

Actual output:

</failure>
</testcase>

<testcase classname='41_method_basic' name='method_06_inheritance.java' time='11.605'>
</testcase>

<testcase classname='41_method_basic' name='method_071_overriding_2.java' time='11.115'>
</testcase>

<testcase classname='41_method_basic' name='method_07_overriding.java' time='10.795'>
</testcase>

<testcase classname='41_method_basic' name='method_08_throws.java' time='10.419'>
</testcase>

<testcase classname='41_method_basic' name='method_09_final.java' time='11.041'>
</testcase>

<testcase classname='41_method_basic' name='method_10_this_explicit.java' time='11.012'>
</testcase>

<testcase classname='41_method_basic' name='method_11_return_object.java' time='10.93'>
</testcase>

<testcase classname='41_method_basic' name='method_12_c_like_arr_args.java' time='11.776'>
<failure>
Expected output:

vi.length= 3
vs.length= 2
mi.length= 4
mi2.length= 0
Done!

Actual output:

</failure>
</testcase>

<testcase classname='41_method_basic' name='method_13_c_like_arr_poly.java' time='12.704'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f(int a[])
A.g(int[] a)
A.h(int a[])

B.f(int[] a)
B.g(int a[])
B.h(int a[])

Done!

Actual output:

</failure>
</testcase>

<testcase classname='42_method_overloading' name='overload_11_diff_arg_num.java' time='12.136'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

2 4 8
3 9
Object[] length: 6
Done!

Actual output:

</failure>
</testcase>

<testcase classname='42_method_overloading' name='overload_12_two_methods.java' time='11.977'>
</testcase>

<testcase classname='42_method_overloading' name='overload_13_arg_conv.java' time='12.884'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

2 4 8
3 9
Object[] length: 6
Done!

Actual output:

</failure>
</testcase>

<testcase classname='42_method_overloading' name='overload_14_null_conv.java' time='11.633'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

null
null def
Done!

Actual output:

</failure>
</testcase>

<testcase classname='42_method_overloading' name='overload_15_inherit_and_others.java' time='12.501'>
</testcase>

<testcase classname='42_method_overloading' name='overload_21_one_arg_diff_type.java' time='8.087'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "2L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.ArgumentList(JavaWrapper.java:2264)
	at javarl.JavaWrapper.Arguments(JavaWrapper.java:2251)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2082)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2687)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.ConstructorDeclaration(JavaWrapper.java:1133)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:343)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

long: 2
String: abcx
RuntimeException: java.lang.RuntimeException: zre
A: A
Done!

Actual output:

</failure>
</testcase>

<testcase classname='42_method_overloading' name='overload_22_one_arg_conv.java' time='12.468'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

long: 2
RuntimeException: java.lang.NullPointerException: np
A: B
Done!

Actual output:

</failure>
</testcase>

<testcase classname='42_method_overloading' name='overload_23_one_arg_mixed.java' time='12.433'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

long: 2
A: B
Done!

Actual output:

</failure>
</testcase>

<testcase classname='42_method_overloading' name='overload_24_one_arg_null.java' time='12.132'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

long: 2
A: null
Done!

Actual output:

</failure>
</testcase>

<testcase classname='42_method_overloading' name='overload_25_multi_arg.java' time='8.742'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.ArgumentList(JavaWrapper.java:2264)
	at javarl.JavaWrapper.Arguments(JavaWrapper.java:2251)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2082)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2687)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.ConstructorDeclaration(JavaWrapper.java:1133)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:343)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

f(long)
f(long)
f(int, long)
f(long, int)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='42_method_overloading' name='overload_26_multi_arg_semiamb.java' time='10.768'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

f(RuntimeException, String)
f(String, RuntimeException)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='42_method_overloading' name='overload_27_one_arg_inherit.java' time='11.01'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f(int)
A.f(boolean)
B.f(Object)
C.f(int[])
Done!

Actual output:

</failure>
</testcase>

<testcase classname='42_method_overloading' name='overload_28_one_arg_polymorph.java' time='11.175'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f(int)
A.f(String)
B.f(int)
A.f(String)
B.f(int)
A.f(String)
B.f(boolean)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='42_method_overloading' name='overload_31_multi_appl.java' time='8.081'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.ArgumentList(JavaWrapper.java:2264)
	at javarl.JavaWrapper.Arguments(JavaWrapper.java:2251)
	at javarl.JavaWrapper.PrimarySuffix(JavaWrapper.java:2135)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2036)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2687)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f(byte)
A.f(short)
A.f(char)
A.f(int)
A.f(long)
A.f(Object)
A.f(RuntimeException)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='42_method_overloading' name='overload_32_multi_appl_conv.java' time='9.405'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.ArgumentList(JavaWrapper.java:2264)
	at javarl.JavaWrapper.Arguments(JavaWrapper.java:2251)
	at javarl.JavaWrapper.PrimarySuffix(JavaWrapper.java:2135)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2036)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2687)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:329)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f(short)
A.f(short)
A.f(long)
A.f(long)
A.f(long)
A.f(Object)
A.f(Object)
A.f(Object[])
A.f(Object[])
Done!

Actual output:

</failure>
</testcase>

<testcase classname='42_method_overloading' name='overload_33_multi_appl_multi_arg.java' time='12.891'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f(short, short)
A.f(int, short)
A.f(short, int)
A.f(long, long)
A.f(long, long)
A.f(long, long)
A.f(Object, Object)
A.f(Object, Object)
A.f(Object, RuntimeException)
A.f(Object, RuntimeException)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='42_method_overloading' name='overload_34_multi_appl_inherit.java' time='11.876'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f(long)
A.f(long)
A.f(long)
A.f(Object)
A.f(Object)
A.f(long)
A.f(long)
A.f(long)
A.f(Object)
A.f(Object)
B.f(int)
B.f(int)
A.f(long)
B.f(String)
A.f(Object)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='42_method_overloading' name='overload_35_multi_appl_poly.java' time='10.655'>
<failure>
Expected output:

A.f(int)
A.f(int)
A.f(long)
B.f(int)
B.f(int)
A.f(long)
B.f(short)
B.f(int)
A.f(long)
Done!

Actual output:

A.f(int)
A.f(int)
A.f(int)
B.f(int)
B.f(int)
B.f(int)
B.f(int)
B.f(int)
B.f(int)
Done!
</failure>
</testcase>

<testcase classname='42_method_overloading' name='overload_36_multi_appl_other.java' time='11.362'>
</testcase>

<testcase classname='42_method_overloading' name='overload_37_big_subtyping.java' time='12.705'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f(long)
A.f(long)
A.f(long)
A.f(long)
A.f(long)
A.f(boolean)
A.f(Object)
A.f(Object)
A.f(Object)
A.f(Object)
A.f(Object)
A.f(Object)
A.f(Object)
A.f(Object)
A.f(Object)
A.f(Object)

B.f(int)
B.f(int)
B.f(int)
A.f(long)
B.f(char)
A.f(boolean)
A.f(Object)
B.f(String)
A.f(Object)
B.f(Object[])
B.f(Object[])
B.f(Object[])
A.f(Object)
B.f(Object[])
B.f(Object[])
B.f(Object[])

C.f(byte)
C.f(short)
B.f(int)
A.f(long)
B.f(char)
A.f(boolean)
A.f(Object)
B.f(String)
A.f(Object)
B.f(Object[])
B.f(Object[])
C.f(RuntimeException[])
C.f(int[])
B.f(Object[])
C.f(Object[][])
C.f(Object[][])

Done!

Actual output:

</failure>
</testcase>

<testcase classname='42_method_overloading' name='overload_38_null_subtyping.java' time='11.695'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f(Object)
B.f(Object[])
C.f(String[])
Done!

Actual output:

</failure>
</testcase>

<testcase classname='42_method_overloading' name='overload_39_base_more_specific.java' time='11.199'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f(int)
A.f(int)
A.f(int)
B.f(long)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='43_method_access_mode' name='m_access_01_override_1.java' time='6.813'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/43_method_access_mode/m_access_01_override_1.java: Is a directory
Error: Could not find or load main class m_access_01_override_1
</error>
</testcase>

<testcase classname='43_method_access_mode' name='m_access_02_override_2.java' time='6.562'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/43_method_access_mode/m_access_02_override_2.java: Is a directory
Error: Could not find or load main class m_access_02_override_2
</error>
</testcase>

<testcase classname='43_method_access_mode' name='m_access_03_overload.java' time='6.418'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/43_method_access_mode/m_access_03_overload.java: Is a directory
Error: Could not find or load main class m_access_03_overload
</error>
</testcase>

<testcase classname='43_method_access_mode' name='m_access_04_acc_modes.java' time='6.199'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/43_method_access_mode/m_access_04_acc_modes.java: Is a directory
Error: Could not find or load main class m_access_04_acc_modes
</error>
</testcase>

<testcase classname='43_method_access_mode' name='m_access_05_protected.java' time='6.659'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/43_method_access_mode/m_access_05_protected.java: Is a directory
Error: Could not find or load main class m_access_05_protected
</error>
</testcase>

<testcase classname='43_method_access_mode' name='m_access_06_acc_mode_specified.java' time='6.01'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/43_method_access_mode/m_access_06_acc_mode_specified.java: Is a directory
Error: Could not find or load main class m_access_06_acc_mode_specified
</error>
</testcase>

<testcase classname='43_method_access_mode' name='m_access_07_acc_mode_not_spec.java' time='6.323'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/43_method_access_mode/m_access_07_acc_mode_not_spec.java: Is a directory
Error: Could not find or load main class m_access_07_acc_mode_not_spec
</error>
</testcase>

<testcase classname='43_method_access_mode' name='overl_overw_interplay_01.java' time='6.586'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/43_method_access_mode/overl_overw_interplay_01.java: Is a directory
Error: Could not find or load main class overl_overw_interplay_01
</error>
</testcase>

<testcase classname='43_method_access_mode' name='overl_overw_interplay_02.java' time='6.839'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/43_method_access_mode/overl_overw_interplay_02.java: Is a directory
Error: Could not find or load main class overl_overw_interplay_02
</error>
</testcase>

<testcase classname='43_method_access_mode' name='overl_overw_interplay_03.java' time='6.824'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/43_method_access_mode/overl_overw_interplay_03.java: Is a directory
Error: Could not find or load main class overl_overw_interplay_03
</error>
</testcase>

<testcase classname='43_method_access_mode' name='overl_overw_interplay_04.java' time='6.068'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/43_method_access_mode/overl_overw_interplay_04.java: Is a directory
Error: Could not find or load main class overl_overw_interplay_04
</error>
</testcase>

<testcase classname='43_method_access_mode' name='overl_overw_interplay_05.java' time='6.626'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/43_method_access_mode/overl_overw_interplay_05.java: Is a directory
Error: Could not find or load main class overl_overw_interplay_05
</error>
</testcase>

<testcase classname='44_fields' name='fields_101_local_access.java' time='11.1'>
</testcase>

<testcase classname='44_fields' name='fields_102_of_type_ref.java' time='11.249'>
</testcase>

<testcase classname='44_fields' name='fields_11_one_class.java' time='11.254'>
</testcase>

<testcase classname='44_fields' name='fields_12_inheritance.java' time='10.999'>
</testcase>

<testcase classname='44_fields' name='fields_131_hiding_local_access.java' time='12.315'>
<failure>
Expected output:

11 12 11 99
Done!

Actual output:

</failure>
</testcase>

<testcase classname='44_fields' name='fields_132_hiding_super_access.java' time='11.932'>
<failure>
Expected output:

35
Done!

Actual output:

</failure>
</testcase>

<testcase classname='44_fields' name='fields_133_hiding_super_2.java' time='11.267'>
<failure>
Expected output:

100 200 1 20 2

Actual output:

</failure>
</testcase>

<testcase classname='44_fields' name='fields_134_hiding_acc_modes.java' time='10.564'>
<failure>
Expected output:

10 false false
Done!

Actual output:

</failure>
</testcase>

<testcase classname='44_fields' name='fields_13_hiding.java' time='11.316'>
<failure>
Expected output:

2 true 22 true
Done!

Actual output:

0 true 0 true
Done!
</failure>
</testcase>

<testcase classname='44_fields' name='fields_14_hiding_by_local_var.java' time='10.527'>
</testcase>

<testcase classname='44_fields' name='fields_15_hiding_by_param.java' time='11.485'>
</testcase>

<testcase classname='44_fields' name='fields_16_default_value.java' time='13.608'>
<failure>
Expected output:

0 0 0 0   false null null 
Done!

Actual output:

0 0 0 0 str(" "))) in(noVal) t(id(0) k((bool(true),str(" ")) -> + -> ['a . 'str | noVal] -> + -> [s(" ") | noVal] -> + -> ['a . 're | noVal] -> + -> [s(" ") | noVal] -> + -> call( o(curr(System) orig(System</failure>
</testcase>

<testcase classname='44_fields' name='fields_17_multifield.java' time='10.551'>
</testcase>

<testcase classname='44_fields' name='fields_18_final.java' time='11.477'>
</testcase>

<testcase classname='44_fields' name='fields_19_hiding_acc_modes.java' time='11.702'>
<failure>
Expected output:

10 false false
Done!

Actual output:

</failure>
</testcase>

<testcase classname='45_class_init' name='field_init_201_const.java' time='9.92'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "9876543210L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.CastExpression(JavaWrapper.java:2004)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1867)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.VariableInitializer(JavaWrapper.java:780)
	at javarl.JavaWrapper.VariableDeclarator(JavaWrapper.java:714)
	at javarl.JavaWrapper.FieldDeclaration(JavaWrapper.java:687)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:364)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

2 9 1286608618
Done!

Actual output:

</failure>
</testcase>

<testcase classname='45_class_init' name='field_init_202_backward_ref.java' time='37.538'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='45_class_init' name='field_init_203_forward_ref.java' time='37.662'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='45_class_init' name='field_init_204_forward_all_defaults.java' time='36.976'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='45_class_init' name='field_init_205_forward_assign.java' time='37.314'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='45_class_init' name='field_init_206_forward_method_ref.java' time='10.914'>
</testcase>

<testcase classname='45_class_init' name='field_init_207_inheritance.java' time='10.626'>
</testcase>

<testcase classname='45_class_init' name='field_init_208_overriding.java' time='11.298'>
<failure>
Expected output:

B.f()
0
Done!

Actual output:

A.f()
3
Done!
</failure>
</testcase>

<testcase classname='45_class_init' name='field_init_209_exc.java' time='9.667'>
<failure>
Expected output:

A.ok()
A.exc()
java.lang.RuntimeException: re
Done!

Actual output:

A.exc()"))) in(noVal) t(id(-2) k(getConstr(public string 'toString(noPara)throws(noType) {4 @ return s( "java.lang.RuntimeException") ;}, string) -> createObj(t( 'RuntimeException), str("re")) -> throw -> e(noEnv) -> return; -> noop) obj(o(f([t(t('A))]) curr(t('A)) orig(t('A)))) fstack(fsi((int d('b)) -> tid(0) -> createObjByClass(t('A), default (int d('c) = 'afterExc < noExp >) ;, nop) -> e(noEnv) -> {nop 23 @ ('System . 'out . 'println < s("A.A") > ;)} -> constrReturn, id(-2) obj(o(f([t(t('A))]) curr(t('A)) orig(t('A)))) xstack(exi(t('RuntimeException), 're, {32 @ ('System . 'out . 'println < 're > ;)} -> e(['args,l(1)]) -> (34 @ ('System . 'out . 'println < s( "Done!") > ;)) -> e(['args,l(1)]) -> stop, id(0) obj(o(f(onil) curr(t( 'field_init_209_exc)) orig(t('field_init_209_exc)))) fstack(noItem) xstack( noItem) lstack(noItem) finalblocks(noItem) env(['args,l(1)]) holds(nil))) lstack(noItem) finalblocks(noItem) env(['a,l(2)]) holds(nil)) fsi((t('A) d( 'a)) -> e(['args,l(1)]) -> restoreXStack(noItem) -> (34 @ ('System . 'out . 'println < s("Done!") > ;)) -> e(['args,l(1)]) -> stop, id(0) obj(o(f(onil) curr(t('field_init_209_exc)) orig(t('field_init_209_exc)))) xstack(exi(t( 'RuntimeException), 're, {32 @ ('System . 'out . 'println < 're > ;)} -> e( ['args,l(1)]) -> (34 @ ('System . 'out . 'println < s("Done!") > ;)) -> e([ 'args,l(1)]) -> stop, id(0) obj(o(f(onil) curr(t('field_init_209_exc)) orig(t('field_init_209_exc)))) fstack(noItem) xstack(noItem) lstack(noItem) finalblocks(noItem) env(['args,l(1)]) holds(nil))) lstack(noItem) finalblocks(noItem) env(['args,l(1)]) holds(nil))) xstack(exi(t( 'RuntimeException), 're, {32 @ ('System . 'out . 'println < 're > ;)} -> e( ['args,l(1)]) -> (34 @ ('System . 'out . 'println < s("Done!") > ;)) -> e([ 'args,l(1)]) -> stop, id(0) obj(o(f(onil) curr(t('field_init_209_exc)) orig(t('field_init_209_exc)))) fstack(noItem) xstack(noItem) lstack(noItem) finalblocks(noItem) env(['args,l(1)]) holds(nil))) lstack(noItem) finalblocks(noItem) env(noEnv) holds(nil)) store([l(1),a(string, anil),0] [ l(2),int(3),-2]) code((default class t('A) extends Object implements none { default (int d('a) = 'ok < noExp >) ; default (int d('b) = 'exc < noExp >) ; default (int d('c) = 'afterExc < noExp >) ; default int 'afterExc( noPara)throws(noType) {(18 @ ('System . 'out . 'println < s("A.afterExc()") > ;)) 19 @ return i(4) ;} default int 'exc(noPara)throws(noType) {(13 @ ( 'System . 'out . 'println < s("A.exc()") > ;)) 14 @ throw new t( 'RuntimeException) < s("re") > ;} default int 'ok(noPara)throws(noType) {(8 @ ('System . 'out . 'println < s("A.ok()") > ;)) 9 @ return i(3) ;} default t('A)(noPara)throws(noType) super(noExp){nop 23 @ ('System . 'out . 'println < s("A.A") > ;)}} public class t('RuntimeException) extends Object implements none {public string 'toString(noPara)throws(noType) {4 @ return s("java.lang.RuntimeException") ;} public t('RuntimeException)( noPara)throws(noType) super(noExp){nop}} public class t( 'field_init_209_exc) extends Object implements none {(public static) void 'main(string[] d('args))throws(noType) {(34 @ (try {t('A) d('a) = new t('A) < noExp > ;} catch(t('RuntimeException) d('re)){32 @ ('System . 'out . 'println < 're > ;)})) 34 @ ('System . 'out . 'println < s("Done!") > ;)} public t('field_init_209_exc)(noPara)throws(noType) super(noExp){nop}} public class t('java) . t('lang) . t('Object) extends Object implements none {public boolean 'equals(notFound d('obj))throws(noType) {4 @ return this == 'obj ;} public string 'toString(noPara)throws(noType) {8 @ return s("Object.toString()") ;} public t('java) . t('lang) . t('Object)( noPara)throws(noType) super(noExp){nop}})) static([t(t('
</failure>
</testcase>

<testcase classname='45_class_init' name='field_init_210_super.java' time='9.627'>
<error>
Test error:
javarl.ParseException: Encountered "(" at line 20, column 17.
Was expecting one of:
    "instanceof" ...
    ";" ...
    "," ...
    "=" ...
    ">" ...
    "<" ...
    "?" ...
    "==" ...
    "<=" ...
    ">=" ...
    "!=" ...
    "||" ...
    "&&" ...
    "++" ...
    "--" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "&" ...
    "|" ...
    "^" ...
    "%" ...
    "<<" ...
    ">>" ...
    ">>>" ...
    "+=" ...
    "-=" ...
    "*=" ...
    "/=" ...
    "&=" ...
    "|=" ...
    "^=" ...
    "%=" ...
    "<<=" ...
    ">>=" ...
    ">>>=" ...
    
	at javarl.JavaWrapper.generateParseException(JavaWrapper.java:6127)
	at javarl.JavaWrapper.jj_consume_token(JavaWrapper.java:6003)
	at javarl.JavaWrapper.FieldDeclaration(JavaWrapper.java:703)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:364)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:329)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

B.f()
A.f()
18 33 3
Done!

Actual output:

</failure>
</testcase>

<testcase classname='45_class_init' name='field_init_211_multifield.java' time='11.894'>
</testcase>

<testcase classname='45_class_init' name='field_init_212_array_init.java' time='10.412'>
<failure>
Expected output:

1 2 
3 4 
11 
null

7 

null

null
Done!

Actual output:

</failure>
</testcase>

<testcase classname='45_class_init' name='inst_init_31.java' time='10.154'>
</testcase>

<testcase classname='45_class_init' name='inst_init_32.java' time='36.655'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='45_class_init' name='inst_init_33.java' time='36.282'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='45_class_init' name='inst_init_34_exc.java' time='38.31'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='45_class_init' name='inst_init_35_hiding.java' time='11.526'>
<failure>
Expected output:

29
2
2
Done!

Actual output:

2
2
2
Done!
</failure>
</testcase>

<testcase classname='45_class_init' name='inst_init_41_hier_order.java' time='10.995'>
</testcase>

<testcase classname='46_constructors' name='constr_50_basic.java' time='12.713'>
</testcase>

<testcase classname='46_constructors' name='constr_51_implicit_noarg.java' time='11.351'>
</testcase>

<testcase classname='46_constructors' name='constr_52_explicit_noarg.java' time='10.394'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.A()
B.B()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='46_constructors' name='constr_53_explicit_args.java' time='10.0'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.A(3,7)
B.B(4,8)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='46_constructors' name='constr_54_args_tracing.java' time='10.829'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Tracer.f()
A.A(29)
B.B()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='46_constructors' name='constr_55_init_tracing.java' time='10.431'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Tracer.f(4)
Tracer.f(1)
A.init
Tracer.f(2)
A.A(4)
B.init 1
Tracer.f(3)
B.init 2
B.B()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='46_constructors' name='constr_56_init_hiding_tracing.java' time='10.401'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Tracer.f(5)
Tracer.f(4)
Tracer.f(1)
A.init
Tracer.f(2)
A.A(4)
A.A: this.a = 1
A.A: this.b = 2
B.init 1
Tracer.f(3)
B.init 2
B.B(5)
B.B: this.a = 3
B.B: this.b = 2
B.B: super.a = 1
Done!

Actual output:

</failure>
</testcase>

<testcase classname='46_constructors' name='constr_57_init_exc.java' time='9.82'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Tracer.f(). Throwing exception...
java.lang.RuntimeException: re
Done!

Actual output:

</failure>
</testcase>

<testcase classname='46_constructors' name='constr_61_this_chain.java' time='9.808'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Tracer.f()
Tracer.f()
Tracer.f()
A.A(114)
B.B()
B.B(int,int)
B.B(int,int,int)

Tracer.f()
Tracer.f()
A.A(24)
B.B()
B.B(int,int)

Tracer.f()
A.A(4)
B.B()

Done!

Actual output:

</failure>
</testcase>

<testcase classname='46_constructors' name='constr_62_this_chain_w_i_init.java' time='11.344'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Tracer.f()
Tracer.f()
Tracer.f()
A.init
A.A(114)
B.init
B.B()
B.B(int,int)
B.B(int,int,int)

Tracer.f()
Tracer.f()
A.init
A.A(24)
B.init
B.B()
B.B(int,int)

Tracer.f()
A.init
A.A(4)
B.init
B.B()

Done!

Actual output:

</failure>
</testcase>

<testcase classname='46_constructors' name='constr_71_default_constr.java' time='10.5'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.init
A.init
B.init
B.B()
A.init
B.init
B.B(int)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='46_constructors' name='constr_81_overload_simple.java' time='10.262'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.A()
A.A(short)
A.A(long)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='46_constructors' name='constr_82_overload_multicontext.java' time='7.593'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "1L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.ArgumentList(JavaWrapper.java:2264)
	at javarl.JavaWrapper.Arguments(JavaWrapper.java:2251)
	at javarl.JavaWrapper.AllocationExpression(JavaWrapper.java:2303)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2071)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2687)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.A(long)
A.A(int)
A.A(byte)
B.B(byte)
A.A(long)
A.A(int)
B.B(int)
A.A(long)
B.B(long)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='46_constructors' name='constr_83_acc_modes_super.java' time='5.868'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/46_constructors/constr_83_acc_modes_super.java: Is a directory
Error: Could not find or load main class constr_83_acc_modes_super
</error>
</testcase>

<testcase classname='46_constructors' name='constr_84_acc_modes_new.java' time='6.057'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/46_constructors/constr_84_acc_modes_new.java: Is a directory
Error: Could not find or load main class constr_84_acc_modes_new
</error>
</testcase>

<testcase classname='46_constructors' name='constr_91_name_collision.java' time='10.812'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Inside A:
A.A() constructor
A.A() method
A field = 1
Outside A:
A.A() constructor
A.A() method
A field = 2
Done!

Actual output:

</failure>
</testcase>

<testcase classname='47_abstract' name='abstract_01_simple.java' time='11.537'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

B.f()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='47_abstract' name='abstract_02_overload.java' time='9.993'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

B.f(int)
B.f(byte)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='47_abstract' name='abstract_03_acc_modes.java' time='6.33'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/47_abstract/abstract_03_acc_modes.java: Is a directory
Error: Could not find or load main class abstract_03_acc_modes
</error>
</testcase>

<testcase classname='48_interfaces' name='interface_11_instof.java' time='11.021'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A instanceof I1 false
(I1)A exception
B instanceof I1 true
(I1)B ok
(I1)B instanceof A true
(A)(I1)B ok
(I1)B instanceof B true
(B)(I1)B ok
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_12_instof_chain.java' time='10.382'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A instanceof I1 true
(I1)A ok
B instanceof I1 true
(I1)B ok
(I1)B instanceof A true
(A)(I1)B ok
(I1)B instanceof B true
(B)(I1)B ok
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_13_instof_multi_impl.java' time='10.775'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A instanceof I1 true
A instanceof I2 true
B instanceof I1 true
B instanceof I2 true
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_14_instof_interf_extends.java' time='11.297'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A instanceof InterBase true
A instanceof InterSub true
(InterSub)(InterBase)A ok
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_15_instof_interf_multi_ext.java' time='10.675'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A instanceof IA true
A instanceof IB false
A instanceof IC false
B instanceof IA false
B instanceof IB true
B instanceof IC false
C instanceof IA true
C instanceof IB true
C instanceof IC true
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_16_instof_hierarchy_tree.java' time='9.629'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

B instanceof IA true
B instanceof IB1 true
B instanceof IB2 true
B instanceof IB3 true
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_21_basic.java' time='10.447'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f()
A.g()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_22_poly.java' time='12.097'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f()
A.g()
B.f()
B.g()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_23_abstract_propagation.java' time='8.484'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

B.f()
B.g(int)
B.h(bool)
B.f()
B.g(int)
B.h(bool)
B.f()
B.g(int)
B.h(bool)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_24_decl_impl_diff_paths.java' time='11.098'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f()
B.g()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_25_one_intf_overload.java' time='10.191'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f(short)
A.f(int)
A.f(long)
A.f(int)
A.f(int)
A.f(long)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_31_multi_impl.java' time='10.751'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f()
A.g()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_32_multi_i_common_method.java' time='9.819'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f()
A.g()
A.f()
A.h()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_33_intf_multi_extends.java' time='11.104'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f()
A.g()
A.f()
A.g()
A.h()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_34_class_and_intf_hier.java' time='10.629'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

B.f()
A.g()
B.f()
B.h()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_35_diamond_hier.java' time='10.029'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Target var I1:
A.f()
A.g()
A.h1()

Target var I2:
A.f()
A.g()
A.h1()
A.h2()

Target var I3:
A.f()
A.g()
A.h1()
A.h3()

Target var I4:
A.f()
A.g()
A.h1()
A.h2()
A.h3()
A.h4()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_36_multi_i_overload.java' time='11.132'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Target var I1:
A.f(long)
A.f(long)
A.f(long)
A.f(long)
A.f(long)

Target var I2:
A.f(int)
A.f(int)
A.f(int)
A.f(int)

Target var I3:
A.f(byte)
A.f(int)
A.f(int)
A.f(long)
A.f(int)

Target var I4:
A.f(short)
A.f(short)
A.f(long)
A.f(long)
A.f(long)

Target var A:
A.f(byte)
A.f(short)
A.f(int)
A.f(long)
A.f(char)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_41_methods_from_cl_object.java' time='11.505'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

i1.equals(): true false
i1.toString(): A.toString()
i2.equals(): true false
i2.toString(): A.toString()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_51_access_modes.java' time='5.001'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/48_interfaces/interface_51_access_modes.java: Is a directory
Error: Could not find or load main class interface_51_access_modes
</error>
</testcase>

<testcase classname='48_interfaces' name='interface_61_class_subtype_of_intf_diamond.java' time='12.44'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

f(IA): f(IA)
f(IB): f(IB)
f(IC): f(IC)
f(IMax): f(IMax)
f(A): f(IA)
f(B): f(IB)
f(C): f(IC)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_62_intf_subtype_of_other.java' time='13.507'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

f(IA): f(Object)
f(IA[]): f(Object[])
f(IA[][]): f(Object[][])
f(IA[][][]): f(Object[][])
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_63_any_subtype_of_intf.java' time='12.297'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

f(byte): f(long)
f(short): f(long)
f(int): f(long)
f(long): f(long)
f(char): f(long)
f(boolean): f(boolean)
f(Object): f(Object)
f(Object[]): f(Object)
f(IA): f(IA)
f(IA[]): f(IA[])
f(IA[][]): f(IA[][])
f(IA[][][]): f(Object)
f(IB): f(IA)
f(IB[]): f(IA[])
f(IB[][]): f(IA[][])
f(IB[][][]): f(Object)
f(IC): f(IA)
f(IC[]): f(IC[])
f(IC[][]): f(IA[][])
f(A): f(IA)
f(A[][]): f(IA[][])
f(A[][][]): f(Object)
f(String): f(Object)
f(String[]): f(Object)
f(RuntimeException): f(Object)
f(int[]): f(Object)
f(IOther): f(Object)
f(IOther[][]): f(Object)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='48_interfaces' name='interface_64_null_subtype_of_intf.java' time='10.923'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

T0.f(null): f(IB)
T1.f(null): f(IB[])
Done!

Actual output:

</failure>
</testcase>

<testcase classname='49_super_method' name='super_m_01_simple.java' time='9.504'>
<error>
Test error:
javarl.ParseException: Encountered "(" at line 24, column 28.
Was expecting one of:
    "instanceof" ...
    ")" ...
    "," ...
    "=" ...
    ">" ...
    "<" ...
    "?" ...
    "==" ...
    "<=" ...
    ">=" ...
    "!=" ...
    "||" ...
    "&&" ...
    "++" ...
    "--" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "&" ...
    "|" ...
    "^" ...
    "%" ...
    "<<" ...
    ">>" ...
    ">>>" ...
    "+=" ...
    "-=" ...
    "*=" ...
    "/=" ...
    "&=" ...
    "|=" ...
    "^=" ...
    "%=" ...
    "<<=" ...
    ">>=" ...
    ">>>=" ...
    
	at javarl.JavaWrapper.generateParseException(JavaWrapper.java:6127)
	at javarl.JavaWrapper.jj_consume_token(JavaWrapper.java:6003)
	at javarl.JavaWrapper.Arguments(JavaWrapper.java:2257)
	at javarl.JavaWrapper.PrimarySuffix(JavaWrapper.java:2135)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2036)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2687)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='49_super_method' name='super_m_02_poly.java' time='8.42'>
<error>
Test error:
javarl.ParseException: Encountered "(" at line 86, column 30.
Was expecting one of:
    "instanceof" ...
    ")" ...
    "," ...
    "=" ...
    ">" ...
    "<" ...
    "?" ...
    "==" ...
    "<=" ...
    ">=" ...
    "!=" ...
    "||" ...
    "&&" ...
    "++" ...
    "--" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "&" ...
    "|" ...
    "^" ...
    "%" ...
    "<<" ...
    ">>" ...
    ">>>" ...
    "+=" ...
    "-=" ...
    "*=" ...
    "/=" ...
    "&=" ...
    "|=" ...
    "^=" ...
    "%=" ...
    "<<=" ...
    ">>=" ...
    ">>>=" ...
    
	at javarl.JavaWrapper.generateParseException(JavaWrapper.java:6127)
	at javarl.JavaWrapper.jj_consume_token(JavaWrapper.java:6003)
	at javarl.JavaWrapper.Arguments(JavaWrapper.java:2257)
	at javarl.JavaWrapper.PrimarySuffix(JavaWrapper.java:2135)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2036)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2687)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A1.f13()
A1.f14()
A2.f23()
A2.f24()
A2.f12()
A2.f123()
A1.f134()
A1.f1()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='49_super_method' name='super_m_03_overload.java' time='8.205'>
<error>
Test error:
javarl.ParseException: Encountered "(" at line 30, column 28.
Was expecting one of:
    "instanceof" ...
    ")" ...
    "," ...
    "=" ...
    ">" ...
    "<" ...
    "?" ...
    "==" ...
    "<=" ...
    ">=" ...
    "!=" ...
    "||" ...
    "&&" ...
    "++" ...
    "--" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "&" ...
    "|" ...
    "^" ...
    "%" ...
    "<<" ...
    ">>" ...
    ">>>" ...
    "+=" ...
    "-=" ...
    "*=" ...
    "/=" ...
    "&=" ...
    "|=" ...
    "^=" ...
    "%=" ...
    "<<=" ...
    ">>=" ...
    ">>>=" ...
    
	at javarl.JavaWrapper.generateParseException(JavaWrapper.java:6127)
	at javarl.JavaWrapper.jj_consume_token(JavaWrapper.java:6003)
	at javarl.JavaWrapper.Arguments(JavaWrapper.java:2257)
	at javarl.JavaWrapper.PrimarySuffix(JavaWrapper.java:2135)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2036)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2687)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f(int)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='49_super_method' name='super_m_04_overload_poly.java' time='8.537'>
<error>
Test error:
javarl.ParseException: Encountered "(" at line 35, column 28.
Was expecting one of:
    "instanceof" ...
    ")" ...
    "," ...
    "=" ...
    ">" ...
    "<" ...
    "?" ...
    "==" ...
    "<=" ...
    ">=" ...
    "!=" ...
    "||" ...
    "&&" ...
    "++" ...
    "--" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "&" ...
    "|" ...
    "^" ...
    "%" ...
    "<<" ...
    ">>" ...
    ">>>" ...
    "+=" ...
    "-=" ...
    "*=" ...
    "/=" ...
    "&=" ...
    "|=" ...
    "^=" ...
    "%=" ...
    "<<=" ...
    ">>=" ...
    ">>>=" ...
    
	at javarl.JavaWrapper.generateParseException(JavaWrapper.java:6127)
	at javarl.JavaWrapper.jj_consume_token(JavaWrapper.java:6003)
	at javarl.JavaWrapper.Arguments(JavaWrapper.java:2257)
	at javarl.JavaWrapper.PrimarySuffix(JavaWrapper.java:2135)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2036)
	at javarl.JavaWrapper.StatementExpression(JavaWrapper.java:2687)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2436)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.f(int)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='49_super_method' name='super_m_05_acc_modes_same_pack.java' time='7.227'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/49_super_method/super_m_05_acc_modes_same_pack.java: Is a directory
Error: Could not find or load main class super_m_05_acc_modes_same_pack
</error>
</testcase>

<testcase classname='49_super_method' name='super_m_06_acc_modes_other_pack.java' time='5.808'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/49_super_method/super_m_06_acc_modes_other_pack.java: Is a directory
Error: Could not find or load main class super_m_06_acc_modes_other_pack
</error>
</testcase>

<testcase classname='49_super_method' name='super_m_07_acc_modes_other_pack_2.java' time='6.279'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/49_super_method/super_m_07_acc_modes_other_pack_2.java: Is a directory
Error: Could not find or load main class super_m_07_acc_modes_other_pack_2
</error>
</testcase>

<testcase classname='49_super_method' name='super_m_08_acc_m_return_hier.java' time='6.771'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/49_super_method/super_m_08_acc_m_return_hier.java: Is a directory
Error: Could not find or load main class super_m_08_acc_m_return_hier
</error>
</testcase>

<testcase classname='49_super_method' name='super_m_09_acc_m_return_hier_poly.java' time='4.799'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/49_super_method/super_m_09_acc_m_return_hier_poly.java: Is a directory
Error: Could not find or load main class super_m_09_acc_m_return_hier_poly
</error>
</testcase>

<testcase classname='49_super_method' name='super_m_10_acc_m_double_overriding.java' time='6.461'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/49_super_method/super_m_10_acc_m_double_overriding.java: Is a directory
Error: Could not find or load main class super_m_10_acc_m_double_overriding
</error>
</testcase>

<testcase classname='49_super_method' name='super_m_11_hier_navigating_calls.java' time='9.153'>
<error>
Test error:
javarl.ParseException: Encountered "(" at line 16, column 17.
Was expecting one of:
    "instanceof" ...
    ";" ...
    "=" ...
    ">" ...
    "<" ...
    "?" ...
    "==" ...
    "<=" ...
    ">=" ...
    "!=" ...
    "||" ...
    "&&" ...
    "++" ...
    "--" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "&" ...
    "|" ...
    "^" ...
    "%" ...
    "<<" ...
    ">>" ...
    ">>>" ...
    "+=" ...
    "-=" ...
    "*=" ...
    "/=" ...
    "&=" ...
    "|=" ...
    "^=" ...
    "%=" ...
    "<<=" ...
    ">>=" ...
    ">>>=" ...
    
	at javarl.JavaWrapper.generateParseException(JavaWrapper.java:6127)
	at javarl.JavaWrapper.jj_consume_token(JavaWrapper.java:6003)
	at javarl.JavaWrapper.ReturnStatement(JavaWrapper.java:3157)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2462)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

33
Done!

Actual output:

</failure>
</testcase>

<testcase classname='51_static_methods' name='static_m_101_qualified.java' time='10.288'>
</testcase>

<testcase classname='51_static_methods' name='static_m_102_nested.java' time='12.109'>
</testcase>

<testcase classname='51_static_methods' name='static_m_103_unqualified.java' time='10.768'>
</testcase>

<testcase classname='51_static_methods' name='static_m_104_unq_static_c.java' time='11.672'>
</testcase>

<testcase classname='51_static_methods' name='static_m_105_multi_unqualified.java' time='11.463'>
</testcase>

<testcase classname='51_static_methods' name='static_m_106_lookup_general.java' time='8.627'>
<error>
Test error:
javarl.ParseException: Encountered "(" at line 86, column 10.
Was expecting one of:
    ";" ...
    "=" ...
    "++" ...
    "--" ...
    "+=" ...
    "-=" ...
    "*=" ...
    "/=" ...
    "&=" ...
    "|=" ...
    "^=" ...
    "%=" ...
    "<<=" ...
    ">>=" ...
    ">>>=" ...
    
	at javarl.JavaWrapper.generateParseException(JavaWrapper.java:6127)
	at javarl.JavaWrapper.jj_consume_token(JavaWrapper.java:6003)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2437)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Static method defined in target class:
(static A)sf(): A.sf()
(inst A)sf(): A.sf()
(A)this.sf(): A.sf()
object.sf(): A.sf()
A.sf(): A.sf()
Static method defined in subclass:
(static B)sf(): A.sf()
(inst B)sf(): A.sf()
(B)this.sf(): A.sf()
object.sf(): A.sf()
B.sf(): A.sf()
Call static method with super qualifier:
(B)super.sf(): A.sf()
(C)super.sf(): A.sf()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='51_static_methods' name='static_m_107_overloading.java' time='12.332'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.sf(byte)
A.sf(long)
A.sf(long)
A.sf(long)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='51_static_methods' name='static_m_108_access_modes.java' time='11.833'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Private static test int:
sf((int) 0): A.sf(int)
A.sf((int) 0): A.sf(int)
a.sf((int) 0): A.sf(int)
Private static test long:
sf((long) 0): A.sf(long)
A.sf((long) 0): A.sf(long)
a.sf((long) 0): A.sf(long)
Private instance test int:
sf((int) 0): A.sf(int)
this.sf((int) 0): A.sf(int)
Private instance test long:
sf((long) 0): A.sf(long)
this.sf((long) 0):A.sf(long)
Public static test int:
A.sf((int) 0): A.sf(long)
a.sf((int) 0): A.sf(long)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='51_static_methods' name='static_m_109_protected_mode.java' time='6.886'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/51_static_methods/static_m_109_protected_mode.java: Is a directory
Error: Could not find or load main class static_m_109_protected_mode
</error>
</testcase>

<testcase classname='51_static_methods' name='static_m_110_overload_hier.java' time='12.704'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.sf(long)
A.sf(long)
B.sf(byte)
A.sf(long)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='51_static_methods' name='static_m_111_no_overwrite.java' time='13.377'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.sf(long)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='51_static_methods' name='static_m_112_hiding.java' time='8.643'>
<error>
Test error:
javarl.ParseException: Encountered "(" at line 99, column 10.
Was expecting one of:
    ";" ...
    "=" ...
    "++" ...
    "--" ...
    "+=" ...
    "-=" ...
    "*=" ...
    "/=" ...
    "&=" ...
    "|=" ...
    "^=" ...
    "%=" ...
    "<<=" ...
    ">>=" ...
    ">>>=" ...
    
	at javarl.JavaWrapper.generateParseException(JavaWrapper.java:6127)
	at javarl.JavaWrapper.jj_consume_token(JavaWrapper.java:6003)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2437)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Call methods in the context of class A:
(static A)sf(): A.sf()
(inst A)sf(): A.sf()
(A)this.sf(): A.sf()
object.sf(): A.sf()
A.sf(): A.sf()
Call methods in the context of class B:
(static B)sf(): B.sf()
(inst B)sf(): B.sf()
(B)this.sf(): B.sf()
object.sf(): B.sf()
B.sf(): B.sf()
(B)super.sf(): A.sf()
Call methods in the context of class C:
(static C)sf(): B.sf()
(inst C)sf(): B.sf()
(C)this.sf(): B.sf()
object.sf(): B.sf()
C.sf(): B.sf()
(C)super.sf(): B.sf()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='51_static_methods' name='static_m_113_hiding_overl_indep.java' time='11.134'>
<failure>
Expected output:

A.sf(int)
A.sf(long)
B.sf(int)
A.sf(long)
Done!

Actual output:

A.sf(int)
A.sf(int)
B.sf(int)
B.sf(int)
Done!
</failure>
</testcase>

<testcase classname='51_static_methods' name='static_m_114_overl_static_inst_1.java' time='11.804'>
<failure>
Expected output:

instance context unqualified:
A.f(byte)
A.f(short)
A.f(int)
A.f(long)

this.f():
A.f(byte)
A.f(short)
A.f(int)
A.f(long)

a.f():
A.f(byte)
A.f(short)
A.f(int)
A.f(long)
Done!

Actual output:

instance context unqualified:
A.f(int)
A.f(int)
A.f(int)
A.f(int)
\nthis.f():
A.f(int)
A.f(int)
A.f(int)
A.f(int)
\na.f():
A.f(int)
A.f(int)
A.f(int)
A.f(int)
Done!
</failure>
</testcase>

<testcase classname='51_static_methods' name='static_m_115_overl_static_inst_2.java' time='10.466'>
<failure>
Expected output:

static context unqualified:
A.f(short)
A.f(long)

A.f():
A.f(short)
A.f(long)
Done!

Actual output:

static context unqualified:
A.f(int)
A.f(int)
\nA.f():
A.f(int)
A.f(int)
Done!
</failure>
</testcase>

<testcase classname='51_static_methods' name='static_m_116_overl_static_inst_3.java' time='7.42'>
<error>
Test error:
javarl.ParseException: Encountered "(" at line 35, column 9.
Was expecting one of:
    ";" ...
    "=" ...
    "++" ...
    "--" ...
    "+=" ...
    "-=" ...
    "*=" ...
    "/=" ...
    "&=" ...
    "|=" ...
    "^=" ...
    "%=" ...
    "<<=" ...
    ">>=" ...
    ">>>=" ...
    
	at javarl.JavaWrapper.generateParseException(JavaWrapper.java:6127)
	at javarl.JavaWrapper.jj_consume_token(JavaWrapper.java:6003)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2437)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

super.f():
A.f(int)
A.f(int)
A.f(int)
A.f(long)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='51_static_methods' name='static_m_117_overl_vs_hiding.java' time='12.135'>
<failure>
Expected output:

A.f()
A.s_g()
B.f()
B.s_g()
B.f()
A.s_g()
Done!

Actual output:

A.f()
A.s_g()
B.f()
B.s_g()
B.f()
B.s_g()
Done!
</failure>
</testcase>

<testcase classname='51_static_methods' name='static_m_118_call_in_inst_init.java' time='11.915'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

B.s_g(3)
A.A(3)
B.s_g(1)
inst init: B.s_g(2)
2
constructor: B.s_g(4)
4
Done!

Actual output:

</failure>
</testcase>

<testcase classname='52_static_fields' name='static_f_101_qualified.java' time='11.399'>
</testcase>

<testcase classname='52_static_fields' name='static_f_102_unqualified.java' time='37.753'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='52_static_fields' name='static_f_103_multi_fields.java' time='37.961'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='52_static_fields' name='static_f_104_instance_counter.java' time='12.667'>
<failure>
Expected output:

0
1
2
3
(id=0 nextId=3) (id=1 nextId=3) (id=2 nextId=3)
Done!

Actual output:

0
1
2
3
f([t(t('A f([t(t('A f([t(t('A
Done!
</failure>
</testcase>

<testcase classname='52_static_fields' name='static_f_105_lookup_general.java' time='36.248'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='52_static_fields' name='static_f_106_hiding.java' time='13.417'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -14
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:182)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Access fields in the context of class A:
(static A)field:a=1 c=3
(inst A): a=1 b=2 c=3
(A)this.field: a=1 b=2 c=3
a.field: a=1 b=2 c=3
A.field: a=1 c=3

Access fields in the context of class B:
(static B)field:a=4 b=5
(inst B)field: a=4 b=5 c=6
(B)this.field: a=4 b=5 c=6
b.field: a=4 b=5 c=6
B.field: a=4 b=5
(B)super.field: a=1 b=2 c=3

Access fields in the context of class C:
(static C)field:a=4 b=5
(inst C)field: a=4 b=5 c=6
(C)this.field: a=4 b=5 c=6
c.field: a=4 b=5 c=6
C.field: a=4 b=5
(C)super.field: a=4 b=5 c=6
Done!

Actual output:

</failure>
</testcase>

<testcase classname='52_static_fields' name='static_f_107_no_overwriting.java' time='12.175'>
<failure>
Expected output:

1 2 3 4
Done!

Actual output:

5 6 7 8
Done!
</failure>
</testcase>

<testcase classname='52_static_fields' name='static_f_108_in_inst_init.java' time='11.758'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.A(14)
inst init: 14
constructor: 14, v=14
Done!

Actual output:

</failure>
</testcase>

<testcase classname='52_static_fields' name='static_f_109_shadowed_by_local_var.java' time='11.843'>
</testcase>

<testcase classname='52_static_fields' name='static_f_110_default_value.java' time='13.511'>
<failure>
Expected output:

0 0 0 0   false null null 
Done!

Actual output:

0 0 0 0 str(" "))) in(noVal) t(id(0) k((bool(true),str(" ")) -> + -> [t('A) . 'str | noVal] -> + -> [s( " ") | noVal] -> + -> [t('A) . 're | noVal] -> + -> [s(" ") | noVal] -> + -> call(o(curr(System) orig(System</failure>
</testcase>

<testcase classname='52_static_fields' name='static_f_111_class_qual_composite.java' time='12.309'>
<failure>
Expected output:

A.b.c init= null
A.b.c after assign= A.b.c
Done!

Actual output:

A.b.c init= str("A.b.c after assign= "
A.b.c
Done!
</failure>
</testcase>

<testcase classname='53_static_init' name='static_f_init_101_const.java' time='8.773'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "9876543210L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.CastExpression(JavaWrapper.java:2004)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1867)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.VariableInitializer(JavaWrapper.java:780)
	at javarl.JavaWrapper.VariableDeclarator(JavaWrapper.java:714)
	at javarl.JavaWrapper.FieldDeclaration(JavaWrapper.java:687)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:364)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

2 9 1286608618
Done!

Actual output:

</failure>
</testcase>

<testcase classname='53_static_init' name='static_f_init_102_backward_ref.java' time='37.111'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='53_static_init' name='static_f_init_103_forward_ref.java' time='37.081'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='53_static_init' name='static_f_init_104_forward_all_defaults.java' time='13.261'>
<failure>
Expected output:

0 0 0 0   false null null
1 2 3 4 x true abc java.lang.RuntimeException: re
Done!

Actual output:

</failure>
</testcase>

<testcase classname='53_static_init' name='static_f_init_105_forward_assign.java' time='11.302'>
<failure>
Expected output:

6 30
Done!

Actual output:

</failure>
</testcase>

<testcase classname='53_static_init' name='static_f_init_106_forward_method_ref.java' time='13.233'>
<failure>
Expected output:

f()
g()
3 5
Done!

Actual output:

</failure>
</testcase>

<testcase classname='53_static_init' name='static_f_init_107_exc.java' time='11.581'>
<failure>
Expected output:

A.ok()
A.exc()
java.lang.ExceptionInInitializerError
Done!

Actual output:

</failure>
</testcase>

<testcase classname='53_static_init' name='static_f_init_108_multifield.java' time='12.596'>
</testcase>

<testcase classname='53_static_init' name='static_f_init_109_array_init.java' time='12.233'>
<failure>
Expected output:

1 2 
3 4 
11 
null

7 

null

null
Done!

Actual output:

</failure>
</testcase>

<testcase classname='53_static_init' name='static_init_21_f_i_then_s_i.java' time='10.844'>
</testcase>

<testcase classname='53_static_init' name='static_init_22_s_i_then_f_i.java' time='37.261'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='53_static_init' name='static_init_23_init_interleaved.java' time='9.756'>
<failure>
Expected output:

2 0 0
2 3 0
2 3 4
Done!

Actual output:

</failure>
</testcase>

<testcase classname='53_static_init' name='static_init_24_exc.java' time='10.161'>
<failure>
Expected output:

2 0 0
java.lang.ExceptionInInitializerError
Done!

Actual output:

</failure>
</testcase>

<testcase classname='53_static_init' name='static_init_25_shadowing.java' time='36.735'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='53_static_init' name='static_init_31_inheritance.java' time='12.293'>
<failure>
Expected output:

f()
B.test()
5 15 13
Done!

Actual output:

</failure>
</testcase>

<testcase classname='53_static_init' name='static_init_32_hier_order.java' time='12.048'>
<failure>
Expected output:

f(1)
f(2)
f(3)
f(21)
f(22)
f(23)
f(31)
f(32)
f(33)
C.f()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_11_interface_target.java' time='11.438'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

12 12
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_12_sub_interface_target.java' time='12.763'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

12 12
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_13_class_target.java' time='12.222'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

12 12 12 12 12
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_14_subclass_target.java' time='12.635'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

12 12 12 12 12 12
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_15_class_sub_i_target.java' time='10.602'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

12 12 12 12 12
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_16_modifiers.java' time='12.621'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

1 2 3 4 5 6
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_21_hiding_direct_interf.java' time='12.93'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

11 12
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_22_hiding_indirect_interf.java' time='12.825'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

11 12
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_23_hiding_class_sub_i.java' time='12.176'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

11 12 12
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_24_hiding_direct_class.java' time='13.134'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

v instance context: A.v I1.v A.v A.v
v static context : A.v I1.v A.v
u instance context: A.u I1.u A.u A.u
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_25_hiding_indirect_class.java' time='11.678'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

v instance context: A.v A.v A.v A.v
v static context : A.v A.v
u instance context: A.u A.u A.u A.u
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_31_multi_inh_no_hiding.java' time='12.409'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

1 2 3 4
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_32_multi_inh_hiding.java' time='12.022'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

1 2 3
1 2 3
1 2 3
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_33_multi_inh_multi_hiding.java' time='12.171'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

11 12 13 13
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_34_multi_inh_giga_hiding.java' time='12.142'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

6 6 6
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_41_multi_inh_multi_path_1.java' time='12.234'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

1 1
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_42_multi_inh_multi_path_2.java' time='10.612'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

1 1
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_51_amb_inherited_1.java' time='10.888'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

1 2
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_52_amb_inherited_2.java' time='11.25'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

1 2
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_61_amb_inherited_super_1.java' time='11.146'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

2
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_62_amb_inherited_super_2.java' time='10.804'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

1
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_71_init_const.java' time='8.917'>
<error>
Test error:
java.lang.NumberFormatException: For input string: "9876543210L"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:441)
	at java.lang.Long.valueOf(Long.java:513)
	at java.lang.Long.decode(Long.java:665)
	at javarl.JavaWrapper.Literal(JavaWrapper.java:2165)
	at javarl.JavaWrapper.PrimaryPrefix(JavaWrapper.java:2052)
	at javarl.JavaWrapper.PrimaryExpression(JavaWrapper.java:2028)
	at javarl.JavaWrapper.PostfixExpression(JavaWrapper.java:1969)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1891)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.CastExpression(JavaWrapper.java:2004)
	at javarl.JavaWrapper.UnaryExpressionNotPlusMinus(JavaWrapper.java:1867)
	at javarl.JavaWrapper.UnaryExpression(JavaWrapper.java:1816)
	at javarl.JavaWrapper.MultiplicativeExpression(JavaWrapper.java:1730)
	at javarl.JavaWrapper.AdditiveExpression(JavaWrapper.java:1696)
	at javarl.JavaWrapper.ShiftExpression(JavaWrapper.java:1658)
	at javarl.JavaWrapper.RelationalExpression(JavaWrapper.java:1616)
	at javarl.JavaWrapper.InstanceOfExpression(JavaWrapper.java:1599)
	at javarl.JavaWrapper.EqualityExpression(JavaWrapper.java:1564)
	at javarl.JavaWrapper.AndExpression(JavaWrapper.java:1543)
	at javarl.JavaWrapper.ExclusiveOrExpression(JavaWrapper.java:1522)
	at javarl.JavaWrapper.InclusiveOrExpression(JavaWrapper.java:1501)
	at javarl.JavaWrapper.ConditionalAndExpression(JavaWrapper.java:1480)
	at javarl.JavaWrapper.ConditionalOrExpression(JavaWrapper.java:1459)
	at javarl.JavaWrapper.ConditionalExpression(JavaWrapper.java:1438)
	at javarl.JavaWrapper.Expression(JavaWrapper.java:1361)
	at javarl.JavaWrapper.VariableInitializer(JavaWrapper.java:780)
	at javarl.JavaWrapper.VariableDeclarator(JavaWrapper.java:714)
	at javarl.JavaWrapper.FieldDeclaration(JavaWrapper.java:687)
	at javarl.JavaWrapper.InterfaceMemberDeclaration(JavaWrapper.java:621)
	at javarl.JavaWrapper.UnmodifiedInterfaceDeclaration(JavaWrapper.java:580)
	at javarl.JavaWrapper.InterfaceDeclaration(JavaWrapper.java:472)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:136)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:329)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

2 9 1286608618
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_72_init_backward_ref.java' time='10.925'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

3 13 103
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_73_init_forward_ref.java' time='10.518'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

0 10 10
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_74_init_forward_all_defaults.java' time='12.676'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

0 0 0 0   false null null
1 2 3 4 x true abc java.lang.RuntimeException: re
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_75_init_exc.java' time='10.992'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Aux.ok()
Aux.exc()
java.lang.ExceptionInInitializerError
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_76_init_multifield.java' time='11.434'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

I1.a = Aux.aInit()
Aux.bInit()
Aux.cInit()
3
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_81_hier_inheritance.java' time='11.403'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

I2.b = trace(10)
trace(1)
trace(2)
trace(11)
10
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_82_hier_multi_inheritance.java' time='10.893'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

I3.e = trace(30)
trace(40)
trace(1)
trace(2)
trace(532)
532
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_83_hier_class_impl_interf.java' time='12.252'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.c = trace(10)
trace(1)
trace(2)
trace(21)
trace(30)
21
Done!

Actual output:

</failure>
</testcase>

<testcase classname='54_interface_fields' name='interface_f_91_array_init.java' time='10.819'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

1 2 
3 4 
11 
null

7 

null

3 4 
11 
null

Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_101_class_init_simple.java' time='12.491'>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_102_two_classes.java' time='12.131'>
<failure>
Expected output:

A.(static init)
A.f()
B.(static init)
B.f()
B.f()
A.f()
Done!

Actual output:

A.(static init)
B.(static init)
A.f()
B.f()
B.f()
A.f()
Done!
</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_103_instantiation.java' time='11.633'>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_104_static_f_read.java' time='10.823'>
<failure>
Expected output:

A.(static init)
trace(1)
1 1
Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_105_static_f_write.java' time='11.835'>
<failure>
Expected output:

A.(static init)
trace(1)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_106_all_triggers.java' time='11.247'>
<failure>
Expected output:

A.(static init)
trace(1)
trace(2)
7
A.A()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_107_both_init.java' time='11.73'>
<failure>
Expected output:

A.(static init)
trace(2)
A.(inst init)
trace(1)
A.A()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_108_hier_instantiate.java' time='13.289'>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_109_hier_s_meth_call.java' time='11.968'>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_110_hier_common_base.java' time='12.813'>
<failure>
Expected output:

A.(static init)
B.(static init)
C.(static init)
A.(inst init)
A.A()
B.(inst init)
B.B()
C.(inst init)
C.C()
D.(static init)
A.(inst init)
A.A()
B.(inst init)
B.B()
D.(inst init)
D.D()
Done!

Actual output:

A.(static init)
B.(static init)
C.(static init)
D.(static init)
A.(inst init)
A.A()
B.(inst init)
B.B()
C.(inst init)
C.C()
A.(inst init)
A.A()
B.(inst init)
B.B()
D.(inst init)
D.D()
Done!
</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_111_actual_init_class_1.java' time='13.566'>
<failure>
Expected output:

A.(static init)
B.(static init)
B.f()
Done!

Actual output:

A.(static init)
B.(static init)
C.(static init)
B.f()
Done!
</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_112_actual_init_class_2.java' time='13.458'>
<failure>
Expected output:

A.(static init)
B.(static init)
trace(1)
1
Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_113_init_chain.java' time='12.574'>
<failure>
Expected output:

B.(static init 1)
A.(static init)
trace(7)
trace(17)
B.(static init 2)
B.f()
Done!

Actual output:

trace(7)
A.(static init)
trace(17)
B.(static init 1)
B.(static init 2)
B.f()
Done!
</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_114_init_loop_no_hier.java' time='36.989'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_115_init_loop_hier.java' time='37.741'>
<error>
Test timed out
</error>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_116_env_separation.java' time='13.215'>
<failure>
Expected output:

x = 1
A.x = A.(static init)
15
Done!

Actual output:

A.(static init)
x = 1
A.x = 15
Done!
</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_201_i_init_simple.java' time='12.877'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

I1.v= trace(5)
5
I1.v= 5
Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_202_two_i.java' time='12.618'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

I1.v= trace(1)
1
I2.v= trace(2)
2
I1.v= 1
I2.v= 2
Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_203_c_i_no_init.java' time='12.57'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

trace(2)
A.A()
I1.a=trace(1)
1
Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_204_i_ii_no_init.java' time='12.428'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

I3.c=trace(3)
3
I1.a=trace(1)
1
I2.b=trace(2)
2
Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_205_intf_m_call_no_init.java' time='12.644'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

trace(2)
A.A()
A.f()
I1.a=trace(1)
1
Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_206_intf_f_call_init.java' time='12.314'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.getA()=trace(2)
A.A()
A.getA()
trace(1)
1
I1.a=1
Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_207_actual_init_intf_1.java' time='11.589'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

I3.b=trace(2)
2
Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_208_actual_init_intf_2.java' time='12.002'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

B.a=trace(1)
1
B.a=1
B.c=trace(2)
A.(static init)
trace(3)
B.(static init)
3
B.c=3
Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_209_init_chain_c_i.java' time='11.688'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.b=A.(static init 1)
trace(1)
trace(21)
A.(static init 2)
21
Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_210_init_chain_i_diam.java' time='12.126'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

I4.d=trace(1)
trace(20)
trace(300)
trace(4000)
4322
I4.c=301
Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_211_init_loop_c_ii.java' time='12.815'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

I1.a=trace(1)
A.(static init 1)
trace(20)
trace(300)
trace(300)
trace(320)
A.(static init 2)
trace(321)
321
A.b=320
I2.c=300
Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_212_init_loop_intf_hier.java' time='11.846'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.(static init 1)
trace(20)
trace(1)
A.(inst init)
A.A()
B.(inst init)
B.B(), b=21, c=0, d=600
trace(30)
A.(static init 2)
B.(static init)
A.(inst init)
A.A()
B.(inst init)
B.B(), b=21, c=31, d=600
B.f()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_213_i_env_separation.java' time='12.344'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

x = 1
I.x = abc
Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_214_trigger_by_unq_exp.java' time='11.252'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

I2.c= trace(I2.b)
trace(I1.a)
trace(I2.c: I1.a)
I2.c: I1.a
Done!

Actual output:

</failure>
</testcase>

<testcase classname='55_static_init_trigger' name='static_i_trig_215_trigger_by_oth_exp.java' time='12.557'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

trace(A.(static init))
b = trace(I1.b)
I1.b
this.c = trace(I2.c)
I2.c
super.d = trace(I3.d)
I3.d
((I4)this).e = trace(I4.e)
I4.e
(new Test()).f = trace(I5.f)
I5.f
Done!

Actual output:

</failure>
</testcase>

<testcase classname='56_main_method' name='main_01_is_static.java' time='13.097'>
</testcase>

<testcase classname='56_main_method' name='main_02_arg_type.java' time='7.085'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/56_main_method/main_02_arg_type.java: Is a directory
Error: Could not find or load main class main_02_arg_type
</error>
</testcase>

<testcase classname='56_main_method' name='main_03_return_type.java' time='7.727'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/56_main_method/main_03_return_type.java: Is a directory
Error: Could not find or load main class main_03_return_type
</error>
</testcase>

<testcase classname='56_main_method' name='main_04_modifiers.java' time='6.867'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/56_main_method/main_04_modifiers.java: Is a directory
Error: Could not find or load main class main_04_modifiers
</error>
</testcase>

<testcase classname='56_main_method' name='main_05_modifiers_order.java' time='11.024'>
</testcase>

<testcase classname='56_main_method' name='main_06_c_like_arg.java' time='12.21'>
</testcase>

<testcase classname='57_field_access_mode' name='f_access_01_instance_all_pairs.java' time='6.748'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/57_field_access_mode/f_access_01_instance_all_pairs.java: Is a directory
Error: Could not find or load main class f_access_01_instance_all_pairs
</error>
</testcase>

<testcase classname='57_field_access_mode' name='f_access_02_static_all_pairs.java' time='5.911'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/57_field_access_mode/f_access_02_static_all_pairs.java: Is a directory
Error: Could not find or load main class f_access_02_static_all_pairs
</error>
</testcase>

<testcase classname='57_field_access_mode' name='f_access_03_multi_inh_priv_pub_1.java' time='14.773'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

12 12 12 12 12
Done!

Actual output:

</failure>
</testcase>

<testcase classname='57_field_access_mode' name='f_access_04_multi_inh_priv_pub_2.java' time='12.017'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

12 12 12 12 12
Done!

Actual output:

</failure>
</testcase>

<testcase classname='57_field_access_mode' name='f_access_05_interf_fields_public.java' time='6.034'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/57_field_access_mode/f_access_05_interf_fields_public.java: Is a directory
Error: Could not find or load main class f_access_05_interf_fields_public
</error>
</testcase>

<testcase classname='61_packages' name='packages_11_fullyqual_simple.java' time='8.227'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_11_fullyqual_simple.java: Is a directory
Error: Could not find or load main class packages_11_fullyqual_simple
</error>
</testcase>

<testcase classname='61_packages' name='packages_12_two_packs.java' time='6.976'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_12_two_packs.java: Is a directory
Error: Could not find or load main class packages_12_two_packs
</error>
</testcase>

<testcase classname='61_packages' name='packages_13_class_name_amb.java' time='6.967'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_13_class_name_amb.java: Is a directory
Error: Could not find or load main class packages_13_class_name_amb
</error>
</testcase>

<testcase classname='61_packages' name='packages_14_nested_packs.java' time='6.899'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_14_nested_packs.java: Is a directory
Error: Could not find or load main class packages_14_nested_packs
</error>
</testcase>

<testcase classname='61_packages' name='packages_21_unq_one_pack.java' time='6.168'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_21_unq_one_pack.java: Is a directory
Error: Could not find or load main class packages_21_unq_one_pack
</error>
</testcase>

<testcase classname='61_packages' name='packages_22_unq_one_pack_2.java' time='7.173'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_22_unq_one_pack_2.java: Is a directory
Error: Could not find or load main class packages_22_unq_one_pack_2
</error>
</testcase>

<testcase classname='61_packages' name='packages_23_unq_from_many_packs.java' time='7.138'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_23_unq_from_many_packs.java: Is a directory
Error: Could not find or load main class packages_23_unq_from_many_packs
</error>
</testcase>

<testcase classname='61_packages' name='packages_24_default_pack.java' time='7.146'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_24_default_pack.java: Is a directory
Error: Could not find or load main class packages_24_default_pack
</error>
</testcase>

<testcase classname='61_packages' name='packages_25_default_pack_2.java' time='6.874'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_25_default_pack_2.java: Is a directory
Error: Could not find or load main class packages_25_default_pack_2
</error>
</testcase>

<testcase classname='61_packages' name='packages_26_java_lang.java' time='6.512'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_26_java_lang.java: Is a directory
Error: Could not find or load main class packages_26_java_lang
</error>
</testcase>

<testcase classname='61_packages' name='packages_31_single_t_imp_simple.java' time='7.135'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_31_single_t_imp_simple.java: Is a directory
Error: Could not find or load main class packages_31_single_t_imp_simple
</error>
</testcase>

<testcase classname='61_packages' name='packages_32_single_t_imp_typical.java' time='6.108'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_32_single_t_imp_typical.java: Is a directory
Error: Could not find or load main class packages_32_single_t_imp_typical
</error>
</testcase>

<testcase classname='61_packages' name='packages_33_single_t_imp_multi.java' time='7.976'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_33_single_t_imp_multi.java: Is a directory
Error: Could not find or load main class packages_33_single_t_imp_multi
</error>
</testcase>

<testcase classname='61_packages' name='packages_34_single_t_imp_same_cu.java' time='6.348'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_34_single_t_imp_same_cu.java: Is a directory
Error: Could not find or load main class packages_34_single_t_imp_same_cu
</error>
</testcase>

<testcase classname='61_packages' name='packages_35_single_t_imp_vs_local.java' time='6.77'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_35_single_t_imp_vs_local.java: Is a directory
Error: Could not find or load main class packages_35_single_t_imp_vs_local
</error>
</testcase>

<testcase classname='61_packages' name='packages_41_multi_t_imp_simple.java' time='6.804'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_41_multi_t_imp_simple.java: Is a directory
Error: Could not find or load main class packages_41_multi_t_imp_simple
</error>
</testcase>

<testcase classname='61_packages' name='packages_42_multi_t_imp_typical.java' time='5.889'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_42_multi_t_imp_typical.java: Is a directory
Error: Could not find or load main class packages_42_multi_t_imp_typical
</error>
</testcase>

<testcase classname='61_packages' name='packages_43_multi_t_imp_multi.java' time='7.679'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_43_multi_t_imp_multi.java: Is a directory
Error: Could not find or load main class packages_43_multi_t_imp_multi
</error>
</testcase>

<testcase classname='61_packages' name='packages_44_multi_t_imp_same_cu.java' time='7.025'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_44_multi_t_imp_same_cu.java: Is a directory
Error: Could not find or load main class packages_44_multi_t_imp_same_cu
</error>
</testcase>

<testcase classname='61_packages' name='packages_45_multi_t_imp_vs_local.java' time='7.565'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_45_multi_t_imp_vs_local.java: Is a directory
Error: Could not find or load main class packages_45_multi_t_imp_vs_local
</error>
</testcase>

<testcase classname='61_packages' name='packages_46_import_types_mix.java' time='7.813'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_46_import_types_mix.java: Is a directory
Error: Could not find or load main class packages_46_import_types_mix
</error>
</testcase>

<testcase classname='61_packages' name='packages_47_multi_t_imp_nested_p.java' time='6.777'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_47_multi_t_imp_nested_p.java: Is a directory
Error: Could not find or load main class packages_47_multi_t_imp_nested_p
</error>
</testcase>

<testcase classname='61_packages' name='packages_51_fullyqual_in_qualifiers.java' time='6.564'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_51_fullyqual_in_qualifiers.java: Is a directory
Error: Could not find or load main class packages_51_fullyqual_in_qualifiers
</error>
</testcase>

<testcase classname='61_packages' name='packages_52_pack_res_in_qualifiers.java' time='6.822'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_52_pack_res_in_qualifiers.java: Is a directory
Error: Could not find or load main class packages_52_pack_res_in_qualifiers
</error>
</testcase>

<testcase classname='61_packages' name='packages_53_class_ext_impl.java' time='6.355'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_53_class_ext_impl.java: Is a directory
Error: Could not find or load main class packages_53_class_ext_impl
</error>
</testcase>

<testcase classname='61_packages' name='packages_54_interf_extends.java' time='6.223'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_54_interf_extends.java: Is a directory
Error: Could not find or load main class packages_54_interf_extends
</error>
</testcase>

<testcase classname='61_packages' name='packages_55_var_method_types.java' time='7.269'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_55_var_method_types.java: Is a directory
Error: Could not find or load main class packages_55_var_method_types
</error>
</testcase>

<testcase classname='61_packages' name='packages_56_array_types.java' time='6.966'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_56_array_types.java: Is a directory
Error: Could not find or load main class packages_56_array_types
</error>
</testcase>

<testcase classname='61_packages' name='packages_57_fullyqual_instanceof.java' time='7.84'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_57_fullyqual_instanceof.java: Is a directory
Error: Could not find or load main class packages_57_fullyqual_instanceof
</error>
</testcase>

<testcase classname='61_packages' name='packages_58_fullyqual_cast.java' time='7.5'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_58_fullyqual_cast.java: Is a directory
Error: Could not find or load main class packages_58_fullyqual_cast
</error>
</testcase>

<testcase classname='61_packages' name='packages_61_same_name_in_hier.java' time='5.782'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_61_same_name_in_hier.java: Is a directory
Error: Could not find or load main class packages_61_same_name_in_hier
</error>
</testcase>

<testcase classname='61_packages' name='packages_62_same_n_w_cons_overl.java' time='7.078'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_62_same_n_w_cons_overl.java: Is a directory
Error: Could not find or load main class packages_62_same_n_w_cons_overl
</error>
</testcase>

<testcase classname='61_packages' name='packages_71_class_access_modes.java' time='6.106'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_71_class_access_modes.java: Is a directory
Error: Could not find or load main class packages_71_class_access_modes
</error>
</testcase>

<testcase classname='61_packages' name='packages_72_acc_modes_vs_local.java' time='7.072'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/61_packages/packages_72_acc_modes_vs_local.java: Is a directory
Error: Could not find or load main class packages_72_acc_modes_vs_local
</error>
</testcase>

<testcase classname='62_class_literals' name='class_lit_01_no_packages.java' time='11.019'>
<failure>
Expected output:

java.lang.Object
java.lang.RuntimeException
A
Done!

Actual output:

</failure>
</testcase>

<testcase classname='62_class_literals' name='class_lit_02_packages.java' time='7.283'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/62_class_literals/class_lit_02_packages.java: Is a directory
Error: Could not find or load main class class_lit_02_packages
</error>
</testcase>

<testcase classname='62_class_literals' name='class_lit_03_interface.java' time='11.73'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

I1
Done!

Actual output:

</failure>
</testcase>

<testcase classname='62_class_literals' name='class_lit_04_arrays.java' time='13.261'>
<failure>
Expected output:

[Ljava.lang.Object;
[LA;
[I
[[I
Done!

Actual output:

</failure>
</testcase>

<testcase classname='62_class_literals' name='class_lit_05_ref_equality.java' time='7.917'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/62_class_literals/class_lit_05_ref_equality.java: Is a directory
Error: Could not find or load main class class_lit_05_ref_equality
</error>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_101_simple.java' time='11.233'>
<failure>
Expected output:

A
A.B
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_102_decl_order.java' time='13.511'>
<failure>
Expected output:

A: A.B, A.C
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_103_members.java' time='12.738'>
<failure>
Expected output:

A: a b c d f() g() h() k()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_104_access_modes.java' time='7.486'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/63_inner_cl_static/inner_st_104_access_modes.java: Is a directory
Error: Could not find or load main class inner_st_104_access_modes
</error>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_105_inner_hier.java' time='13.903'>
<failure>
Expected output:

(A.Inner): A.Inner.a A.Inner.f() B.g()
(B) : B.a A.Inner.f() B.g()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_106_inner_impl_intf.java' time='13.129'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

(I1): I1.a A.Inner.f()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_107_simple_names_3_lvl.java' time='13.907'>
<failure>
Expected output:

A: A A.B
B: A A.B A.B.C
C: A A.B A.B.C
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_108_access_modes_hier.java' time='7.406'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/63_inner_cl_static/inner_st_108_access_modes_hier.java: Is a directory
Error: Could not find or load main class inner_st_108_access_modes_hier
</error>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_109_inner_poly.java' time='11.999'>
<failure>
Expected output:

A.Inner.f()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_201_inner_to_outer.java' time='13.229'>
<failure>
Expected output:

A.B, parent.id = A
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_202_outer_members.java' time='12.415'>
<failure>
Expected output:

A.B: a b c d f() g() h() k()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_301_simple_outer_field.java' time='11.514'>
<failure>
Expected output:

B.Inner instance ct:
A.a B.b
A.a B.b
a_val_2 b_val_2
B.Inner static ct:
a_val_2 b_val_2
a_val_2 b_val_2
a_val_3 b_val_3
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_302_simple_outer_method.java' time='13.177'>
<failure>
Expected output:

B.Inner:
B.f()
B.f()
B.Inner:
B.f()
B.f()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_303_outer_acc_modes.java' time='7.459'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/63_inner_cl_static/inner_st_303_outer_acc_modes.java: Is a directory
Error: Could not find or load main class inner_st_303_outer_acc_modes
</error>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_401_inner_dec_acc_modes.java' time='13.424'>
<failure>
Expected output:

A.Pack A.Prot A.Pub
A.Pri A.Pack A.Prot A.Pub
A.Pri A.Pack A.Prot A.Pub
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_501_qualifiers.java' time='7.128'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/63_inner_cl_static/inner_st_501_qualifiers.java: Is a directory
Error: Could not find or load main class inner_st_501_qualifiers
</error>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_502_qualifiers_disamb.java' time='7.753'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/63_inner_cl_static/inner_st_502_qualifiers_disamb.java: Is a directory
Error: Could not find or load main class inner_st_502_qualifiers_disamb
</error>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_503_qual_disamb_import.java' time='7.939'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/63_inner_cl_static/inner_st_503_qual_disamb_import.java: Is a directory
Error: Could not find or load main class inner_st_503_qual_disamb_import
</error>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_504_qual_disamb_acc_m.java' time='6.625'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/63_inner_cl_static/inner_st_504_qual_disamb_acc_m.java: Is a directory
Error: Could not find or load main class inner_st_504_qual_disamb_acc_m
</error>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_601_var_types.java' time='7.778'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/63_inner_cl_static/inner_st_601_var_types.java: Is a directory
Error: Could not find or load main class inner_st_601_var_types
</error>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_602_operators.java' time='8.446'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/63_inner_cl_static/inner_st_602_operators.java: Is a directory
Error: Could not find or load main class inner_st_602_operators
</error>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_603_static_access.java' time='7.588'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/63_inner_cl_static/inner_st_603_static_access.java: Is a directory
Error: Could not find or load main class inner_st_603_static_access
</error>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_604_unq_inner_in_extends.java' time='11.355'>
<failure>
Expected output:

A.Inner2
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_605_unq_inner_in_extends_fw.java' time='11.981'>
<failure>
Expected output:

A.Inner1
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_606_type_decl.java' time='6.968'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/63_inner_cl_static/inner_st_606_type_decl.java: Is a directory
Error: Could not find or load main class inner_st_606_type_decl
</error>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_701_three_levels.java' time='6.96'>
<error>
Generator error:
cat: /home/denis.bogdanas/java-semantics/java-fan/tools/../../programs/63_inner_cl_static/inner_st_701_three_levels.java: Is a directory
Error: Could not find or load main class inner_st_701_three_levels
</error>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_702_3_lvl_members.java' time='11.634'>
<failure>
Expected output:

A.a Mid.b Inner.c
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_703_3_lvl_overload.java' time='12.206'>
<failure>
Expected output:

byte arg: A.Mid.Inner.f(long)
int arg: A.Mid.Inner.f(long)
long arg: A.Mid.Inner.f(long)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_704_nesting_inher_overl.java' time='12.56'>
<failure>
Expected output:

byte arg: SuperInner.f(int)
short arg:SuperInner.f(int)
int arg: SuperInner.f(int)
long arg: A.Inner.f(long)
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_705_inherit_inner_decl.java' time='12.323'>
<failure>
Expected output:

Inner.f(): A.Inner.f()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_706_in_derives_out.java' time='11.594'>
<failure>
Expected output:

Inner.f(): x = Inner.x
A.g(): x = A.x
Inner.f(): x = Inner.x
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_707_out_derives_in.java' time='12.687'>
<failure>
Expected output:

From main:
A.x
A.Inner.y
A.Inner.y
B.z
From B:
A.Inner.y
B.z
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_708_in_decl_hiding.java' time='12.38'>
<failure>
Expected output:

A: Inner.x = A.Inner.x
B: Inner.x = A.Inner.x
C: Inner.x = C.Inner.x
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_709_sorts_name_collision.java' time='13.375'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Test from A:
x new val
A.x()
A.x.toString()

Test from main:
x other val
A.x()
A.x.toString()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_710_unq_in_ext_inherit.java' time='10.217'>
<error>
Test error:
javarl.ParseException: Encountered "(" at line 26, column 44.
Was expecting one of:
    "instanceof" ...
    ";" ...
    "=" ...
    ">" ...
    "<" ...
    "?" ...
    "==" ...
    "<=" ...
    ">=" ...
    "!=" ...
    "||" ...
    "&&" ...
    "++" ...
    "--" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "&" ...
    "|" ...
    "^" ...
    "%" ...
    "<<" ...
    ">>" ...
    ">>>" ...
    "+=" ...
    "-=" ...
    "*=" ...
    "/=" ...
    "&=" ...
    "|=" ...
    "^=" ...
    "%=" ...
    "<<=" ...
    ">>=" ...
    ">>>=" ...
    
	at javarl.JavaWrapper.generateParseException(JavaWrapper.java:6127)
	at javarl.JavaWrapper.jj_consume_token(JavaWrapper.java:6003)
	at javarl.JavaWrapper.ReturnStatement(JavaWrapper.java:3157)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2462)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.NestedClassDeclaration(JavaWrapper.java:323)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:339)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

B.InnerB, base: A.InnerA
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_711_twisted_inherit.java' time='9.474'>
<error>
Test error:
javarl.ParseException: Encountered "(" at line 17, column 44.
Was expecting one of:
    "instanceof" ...
    ";" ...
    "=" ...
    ">" ...
    "<" ...
    "?" ...
    "==" ...
    "<=" ...
    ">=" ...
    "!=" ...
    "||" ...
    "&&" ...
    "++" ...
    "--" ...
    "+" ...
    "-" ...
    "*" ...
    "/" ...
    "&" ...
    "|" ...
    "^" ...
    "%" ...
    "<<" ...
    ">>" ...
    ">>>" ...
    "+=" ...
    "-=" ...
    "*=" ...
    "/=" ...
    "&=" ...
    "|=" ...
    "^=" ...
    "%=" ...
    "<<=" ...
    ">>=" ...
    ">>>=" ...
    
	at javarl.JavaWrapper.generateParseException(JavaWrapper.java:6127)
	at javarl.JavaWrapper.jj_consume_token(JavaWrapper.java:6003)
	at javarl.JavaWrapper.ReturnStatement(JavaWrapper.java:3157)
	at javarl.JavaWrapper.Statement(JavaWrapper.java:2462)
	at javarl.JavaWrapper.BlockStatement(JavaWrapper.java:2601)
	at javarl.JavaWrapper.Block(JavaWrapper.java:2548)
	at javarl.JavaWrapper.MethodDeclaration(JavaWrapper.java:928)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:345)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.NestedClassDeclaration(JavaWrapper.java:323)
	at javarl.JavaWrapper.ClassBodyDeclaration(JavaWrapper.java:339)
	at javarl.JavaWrapper.ClassBody(JavaWrapper.java:266)
	at javarl.JavaWrapper.UnmodifiedClassDeclaration(JavaWrapper.java:223)
	at javarl.JavaWrapper.ClassDeclaration(JavaWrapper.java:192)
	at javarl.JavaWrapper.TypeDeclaration(JavaWrapper.java:128)
	at javarl.JavaWrapper.CompilationUnit(JavaWrapper.java:92)
	at javarl.JavaRL.reformat(JavaRL.java:314)
	at javarl.JavaRL.reformat(JavaRL.java:324)
	at javarl.JavaRL.main(JavaRL.java:51)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.InnerA, base: B.InnerB
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_801_inner_interf.java' time='10.753'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

A.Inner.f(), id = A.II1
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_802_outer_interf.java' time='13.076'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

InnerC.cid: I1.outerid
InnerI.iid: I1.outerid
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_803_in_intf_are_static.java' time='11.582'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

Impl.f()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_804_intf_member_t_are_static.java' time='13.04'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

I1.Inner.f()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_805_in_intf_impl_out_intf.java' time='12.118'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

C.f() C.g()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_806_intf_impl_in_intf.java' time='12.135'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

B.f() A.IInner.id A.IInner.id
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_807_impl_in_intf_and_names.java' time='11.259'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

B: x = A.IInner1.x, y = A.IInner2.y
A.IInner1.x A.IInner2.y
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_808_static_init.java' time='10.641'>
<failure>
Expected output:

A.Inner1: static init
A.Inner1.id
B: static init
B.id
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_809_inner_intf_outer_m_call.java' time='11.68'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

trace: A.id
trace: A.f()
IInner.x: A.id
IInner.y: A.f()
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_810_inherit_in_unq.java' time='10.204'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

B: IInner1.id = IA.IInner1.id, IInner2.id = IA.IInner2.id
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_811_inherit_in_unq_in_impl.java' time='12.012'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

B.InnerB: x = IA.IInner1.x, y = IA.IInner2.y
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_812_inherit_in_unq_in_intf.java' time='10.198'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

IB.id: IInner1.id = IA.IInner1.id, IInner2.id = IA.IInner2.id
Done!

Actual output:

</failure>
</testcase>

<testcase classname='63_inner_cl_static' name='inner_st_813_inherit_in_unq_in_intf_ext.java' time='12.193'>
<error>
Test error:
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1911)
	at javarl.JavaRL.formatResults(JavaRL.java:193)
	at javarl.JavaRL.formatOutput(JavaRL.java:125)
	at javarl.JavaRL.main(JavaRL.java:83)
tail: cannot open `temp/out.txt' for reading: No such file or directory
</error>
<failure>
Expected output:

IB.IInnerB.id: x = IA.IInner1.x, y = IA.IInner2.y
Done!

Actual output:

</failure>
</testcase>

</testsuite>
