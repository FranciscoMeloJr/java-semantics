Test plan for abstract methods / constructors.

1. Simple test.
  - A: abstract f()
  - B < A: concrete f()
  - main:
    - call (A)B.f()
  Should work for ignoring semantics of abstract methods.

2. Abstract methods and overloading.
  - A:
    - abstract f(int)
    - f(long)
  - B < A:
    - public f(byte)
    - f(int)
  - main:
    - call (A)B.f(byte) - should call f(int)
    - call (B)B.f(byte) - should call f(byte)

3. Abstract methods and access modes.
  - a.A:
    - protected abstract f(short)
    - public abstract f(int)
    - public f(long)
  - a.B < A:
    - public f(short)
    - public f(int)
  - main:
    - call (A)B.f(byte) - should call f(int)
    - call (A)B.f(long) - should call f(long)
    - call (B)B.f(byte) - should call f(short)
    - call (B)B.f(long) - should call f(long)
