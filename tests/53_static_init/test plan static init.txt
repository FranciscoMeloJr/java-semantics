    Test plan for static members.

Part 3. Static initialization - just static members.

Just the order of initialization within a class/hierarchy. we are not testing
  when a class initialization is triggered. Tested classes have only static members.
  Initialization is triggered through call to a static method.
  We will not test final constant fields here, since they are initialized differently.

Subpart 1. Static field initializers.
Subpart 2. Static initializers.
Subpart 3. Init order through class hierarchies.

101. Fileds with initializer, all initialized with a constant expression.
102. Fields with initializer, some initializer exps refer to fields declared above.
103. Fields with initializer, initializer exps refer to fields declared below. Default values exposed.
104. Fields with initializer, forward reference, default values for all types tested.
105. Field with initializer, initializer have an assignment to other field declared forward.
106. Fields with initializer, referring to methods declared both below and above.
107. Fields with initializer throwing an exception. Test that all the remaining initializers
  and the constructor are not executed. Catch ExceptionInInitializerError in main.
108. Multifield with init. Two groups of three fields each:
  static int a, b=..., c;
  static int d=..., e, f=...;
  Test their values.
109. Array fields with array initializer in the most complex fashion:
Combination of multi field declaration, field with [] in declarator, array initializer.

21. Field with initializer, then static initializer, initializing the same field.
22. Static initializer, then field initializer, initializing the same field.
23. Field, static initializer, field, static initializer.
24. Static initializer throwing an exception. The remaining field and static initializers are not executed.
25. Static initializer with a local var shadowing a field.
26. Static initializer throwing an exception. Access "this" after catching ExceptionInInitializerError.
  Static initialization is triggered by a method call.
  This is required to test a peculiarity of the implementation.
27. Static initializer throwing an exception. Access "this" after catching ExceptionInInitializerError.
  Static initialization is triggered by a static field access.
  This is required to test a peculiarity of the implementation.

31. Fields with initializer, referring to superclass static fields/methods.
32. Hierarchy of three classes, all with fields with initializer, static initializers.
  Test that the order is correct. All initializers print a message.

