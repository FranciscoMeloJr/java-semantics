module CLASS-DEC-Object

syntax K ::= "classDecObject"

/*
class Object {
    public boolean equals(Object obj) {
        return (this == obj);
    }

    public String toString() {
        return getClass().getName() + "@" + hashCode();
    }
}
*/
rule classDecObject =>
'ClassDec(
  'ClassDecHead(
    'ListWrap(
      .List{K}
    ),,
    'Id(
      "Object"
    ),,
    'None(
      .List{K}
    ),,
    'None(
      .List{K}
    ),,
    'None(
      .List{K}
    )
  ),,
  'ClassBody(
    'ListWrap(
      'MethodDec(
        'MethodDecHead(
          'ListWrap(
            'Public(
              .List{K}
            )
          ),,
          'None(
            .List{K}
          ),,
          'Boolean(
            .List{K}
          ),,
          'Id(
            "equals"
          ),,
          'ListWrap(
            'Param(
              'ListWrap(
                .List{K}
              ),,
              'ClassOrInterfaceType(
                'TypeName(
                  'Id(
                    "Object"
                  )
                ),,
                'None(
                  .List{K}
                )
              ),,
              'Id(
                "obj"
              )
            )
          ),,
          'None(
            .List{K}
          )
        ),,
        'Block(
          'ListWrap(
            'Return(
              'Some(
                'Eq(
                  'This(
                    .List{K}
                  ),,
                  'ExprName(
                    'Id(
                      "obj"
                    )
                  )
                )
              )
            )
          )
        )
      ),,
      'MethodDec(
        'MethodDecHead(
          'ListWrap(
            'Public(
              .List{K}
            )
          ),,
          'None(
            .List{K}
          ),,
          'ClassOrInterfaceType(
            'TypeName(
              'Id(
                "String"
              )
            ),,
            'None(
              .List{K}
            )
          ),,
          'Id(
            "toString"
          ),,
          'ListWrap(
            .List{K}
          ),,
          'None(
            .List{K}
          )
        ),,
        'Block(
          'ListWrap(
            'Return(
              'Some(
                'Plus(
                  'Plus(
                    'Invoke(
                      'Method(
                        'Invoke(
                          'Method(
                            'MethodName(
                              'Id(
                                "getClass"
                              )
                            )
                          ),,
                          'ListWrap(
                            .List{K}
                          )
                        ),,
                        'None(
                          .List{K}
                        ),,
                        'Id(
                          "getName"
                        )
                      ),,
                      'ListWrap(
                        .List{K}
                      )
                    ),,
                    'Lit(
                      'String(
                        'ListWrap(
                          'Chars(
                            "@"
                          )
                        )
                      )
                    )
                  ),,
                  'Invoke(
                    'Method(
                      'MethodName(
                        'Id(
                          "hashCode"
                        )
                      )
                    ),,
                    'ListWrap(
                      .List{K}
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

end module
